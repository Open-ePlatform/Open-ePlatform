package com.nordicpeak.filearchive.beans;

import java.lang.reflect.Field;

import org.apache.commons.fileupload.FileItem;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

import se.unlogic.standardutils.dao.annotations.DAOManaged;
import se.unlogic.standardutils.dao.annotations.Key;
import se.unlogic.standardutils.dao.annotations.ManyToOne;
import se.unlogic.standardutils.dao.annotations.Table;
import se.unlogic.standardutils.io.BinarySizeFormater;
import se.unlogic.standardutils.reflection.ReflectionUtils;
import se.unlogic.standardutils.xml.GeneratedElementable;
import se.unlogic.standardutils.xml.XMLElement;
import se.unlogic.standardutils.xml.XMLUtils;

@Table(name = "file_archive_files")
@XMLElement
public class File extends GeneratedElementable {

	public static final Field FILE_COLLECTION_RELATION = ReflectionUtils.getField(File.class, "fileCollection");

	@DAOManaged(autoGenerated = true)
	@Key
	@XMLElement
	private Integer fileID;

	@DAOManaged
	@XMLElement
	private String name;

	@DAOManaged
	@XMLElement
	private String alias;

	@DAOManaged
	@XMLElement
	private Long size;

	@DAOManaged(columnName = "collectionID")
	@ManyToOne
	private FileCollection fileCollection;

	private FileItem fileItem;

	public Integer getFileID() {

		return fileID;
	}

	public void setFileID(Integer fileID) {

		this.fileID = fileID;
	}

	public String getName() {

		return name;
	}

	public void setName(String name) {

		this.name = name;
	}

	public FileCollection getFileCollection() {

		return fileCollection;
	}

	public void setFileCollection(FileCollection fileCollection) {

		this.fileCollection = fileCollection;
	}

	public String getAlias() {

		return alias;
	}

	public void setAlias(String alias) {

		this.alias = alias;
	}

	public FileItem getFileItem() {

		return fileItem;
	}

	public void setFileItem(FileItem fileItem) {

		this.fileItem = fileItem;
	}

	@Override
	public String toString() {

		return this.name + " (fileID: " + fileID + ")";
	}

	public Long getSize() {

		return size;
	}

	public void setSize(Long size) {

		this.size = size;
	}

	@Override
	public Element toXML(Document doc) {

		Element fileElement = super.toXML(doc);

		XMLUtils.appendNewElement(doc, fileElement, "FormatedSize", BinarySizeFormater.getFormatedSize(size));

		return fileElement;
	}
}
