package com.nordicpeak.filearchive.beans;

import java.lang.reflect.Field;
import java.sql.Timestamp;
import java.util.Collection;
import java.util.List;

import se.unlogic.hierarchy.core.beans.User;
import se.unlogic.hierarchy.core.interfaces.AccessInterface;
import se.unlogic.standardutils.annotations.PopulateOnlyIfRequired;
import se.unlogic.standardutils.annotations.RequiredIfSet;
import se.unlogic.standardutils.annotations.WebPopulate;
import se.unlogic.standardutils.dao.annotations.DAOManaged;
import se.unlogic.standardutils.dao.annotations.Key;
import se.unlogic.standardutils.dao.annotations.OneToMany;
import se.unlogic.standardutils.dao.annotations.OrderBy;
import se.unlogic.standardutils.dao.annotations.SimplifiedRelation;
import se.unlogic.standardutils.dao.annotations.Table;
import se.unlogic.standardutils.reflection.ReflectionUtils;
import se.unlogic.standardutils.xml.GeneratedElementable;
import se.unlogic.standardutils.xml.XMLElement;

import com.nordicpeak.filearchive.enums.SecurityMode;

@Table(name = "file_archive_collections")
@XMLElement
public class FileCollection extends GeneratedElementable implements AccessInterface {

	public static final Field ALLOWED_USERS_RELATION = ReflectionUtils.getField(FileCollection.class, "allowedUserIDs");
	public static final Field PERSONS_RELATION = ReflectionUtils.getField(FileCollection.class, "citizenIDs");
	public static final Field ALLOWED_GROUPS_RELATION = ReflectionUtils.getField(FileCollection.class, "allowedGroupIDs");
	public static final Field FILES_RELATION = ReflectionUtils.getField(FileCollection.class, "files");

	@DAOManaged(autoGenerated = true)
	@Key
	@XMLElement
	private Integer collectionID;

	@DAOManaged
	@OrderBy
	@WebPopulate(maxLength = 255)
	@XMLElement
	private String name;

	@DAOManaged
	@XMLElement
	private String alias;

	@DAOManaged
	@XMLElement
	private SecurityMode securityMode;

	@DAOManaged
	@WebPopulate
	@XMLElement
	private boolean encrypted;

	@WebPopulate
	@RequiredIfSet(paramNames = "encrypted")
	private String encryptionPassword;

	@DAOManaged
	@XMLElement
	private String encryptionHash;

	@DAOManaged
	@WebPopulate
	@XMLElement
	private boolean allowsCollaboration;

	@DAOManaged
	@WebPopulate
	@RequiredIfSet(paramNames = "setUserKeepDays")
	@PopulateOnlyIfRequired
	@XMLElement
	private Integer collectionKeepDays;

	@DAOManaged(dontUpdateIfNull = true)
	@XMLElement(childName = "poster")
	private User poster;

	@DAOManaged(dontUpdateIfNull = true)
	@XMLElement(childName = "editor")
	private User editor;

	@DAOManaged
	@OrderBy(priority = 1)
	@XMLElement
	private Timestamp posted;

	@DAOManaged
	@XMLElement
	private Timestamp updated;

	@DAOManaged
	@OneToMany(autoAdd = true, autoGet = true, autoUpdate = true)
	@SimplifiedRelation(table = "file_archive_collections_groups", remoteValueColumnName = "groupID")
	@XMLElement(childName = "groupID")
	private List<Integer> allowedGroupIDs;

	@DAOManaged
	@OneToMany(autoAdd = true, autoGet = true, autoUpdate = true)
	@SimplifiedRelation(table = "file_archive_collections_users", remoteValueColumnName = "userID")
	@XMLElement(childName = "userID")
	private List<Integer> allowedUserIDs;

	@DAOManaged
	@OneToMany(autoAdd = true, autoGet = true, autoUpdate = true)
	@XMLElement
	private List<File> files;

	@DAOManaged
	@OneToMany(autoAdd = true, autoGet = true, autoUpdate = true)
	@SimplifiedRelation(table = "file_archive_collection_persons", remoteValueColumnName = "citizenID")
	@XMLElement(childName = "citizenID")
	private List<String> citizenIDs;

	public Integer getCollectionID() {

		return collectionID;
	}

	public void setCollectionID(Integer collectionID) {

		this.collectionID = collectionID;
	}

	public String getAlias() {

		return alias;
	}

	public void setAlias(String alias) {

		this.alias = alias;
	}

	public List<File> getFiles() {

		return files;
	}

	public void setFiles(List<File> files) {

		this.files = files;
	}

	public String getName() {

		return name;
	}

	public void setName(String name) {

		this.name = name;
	}

	public boolean isEncrypted() {

		return encrypted;
	}

	public void setEncrypted(boolean encrypted) {

		this.encrypted = encrypted;
	}

	public String getEncryptionHash() {

		return encryptionHash;
	}

	public void setEncryptionHash(String encryptionHash) {

		this.encryptionHash = encryptionHash;
	}

	public String getEncryptionPassword() {

		return encryptionPassword;
	}

	public void setEncryptionPassword(String encryptionPassword) {

		this.encryptionPassword = encryptionPassword;
	}

	public boolean isAllowsCollaboration() {

		return allowsCollaboration;
	}

	public void setAllowsCollaboration(boolean allowsCollaboration) {

		this.allowsCollaboration = allowsCollaboration;
	}

	public Integer getCollectionKeepDays() {

		return collectionKeepDays;
	}

	public void setCollectionKeepDays(Integer collectionKeepDays) {

		this.collectionKeepDays = collectionKeepDays;
	}

	public User getPoster() {

		return poster;
	}

	public void setPoster(User poster) {

		this.poster = poster;
	}

	public User getEditor() {

		return editor;
	}

	public void setEditor(User editor) {

		this.editor = editor;
	}

	public Timestamp getPosted() {

		return posted;
	}

	public void setPosted(Timestamp posted) {

		this.posted = posted;
	}

	public Timestamp getUpdated() {

		return updated;
	}

	public void setUpdated(Timestamp updated) {

		this.updated = updated;
	}

	@Override
	public String toString() {

		return this.name + " (collectionID: " + collectionID + ")";
	}

	@Override
	public boolean allowsAdminAccess() {

		return false;
	}

	@Override
	public boolean allowsUserAccess() {

		return false;
	}

	@Override
	public boolean allowsAnonymousAccess() {

		return false;
	}

	@Override
	public Collection<Integer> getAllowedGroupIDs() {

		return this.allowedGroupIDs;
	}

	@Override
	public Collection<Integer> getAllowedUserIDs() {

		return this.allowedUserIDs;
	}

	public void setAllowedGroupIDs(List<Integer> allowedGroupIDs) {

		this.allowedGroupIDs = allowedGroupIDs;
	}

	public void setAllowedUserIDs(List<Integer> allowedUserIDs) {

		this.allowedUserIDs = allowedUserIDs;
	}

	public SecurityMode getSecurityMode() {

		return securityMode;
	}

	public void setSecurityMode(SecurityMode securityMode) {

		this.securityMode = securityMode;
	}

	public List<String> getCitizenIDs() {

		return citizenIDs;
	}

	public void setCitizenIDs(List<String> citizenIDs) {

		this.citizenIDs = citizenIDs;
	}
}
