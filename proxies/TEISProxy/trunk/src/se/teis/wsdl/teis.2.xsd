<?xml version="1.0" encoding="utf-8"?>
<xs:schema elementFormDefault="qualified" targetNamespace="http://schemas.datacontract.org/2004/07/TeisWsCommon" xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:tns="http://schemas.datacontract.org/2004/07/TeisWsCommon">
	<xs:complexType name="StdEnvelope">
		<xs:annotation>
			<xs:appinfo />
			<xs:documentation>Applicable for operation UploadMessageStd.
				Holds Envelope information.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="connection" nillable="true" type="tns:Connection">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Connection information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="message" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Message data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="meta" nillable="true" type="tns:Meta">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Meta information.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="StdEnvelope" nillable="true" type="tns:StdEnvelope" />
	<xs:complexType name="Connection">
		<xs:annotation>
			<xs:appinfo />
			<xs:documentation>All elements included in Connection is mandatory for all operations.
				Holds Connection information.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Password" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Password to authenticate with.
						Example of a request: &lt;Password&gt;******&lt;/Password&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ServiceId" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Service identity to authenticate with.
						Request: &lt;ServiceId&gt;[to be requested from service provider]&lt;/ServiceId&gt;
						Example of a request: &lt;ServiceId&gt;Abcd167-A&lt;/ServiceId&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="User" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>User to authenticate with.
						Request: &lt;User&gt;[to be requested from service provider]&lt;/User&gt;
						Example of a request: &lt;User&gt;Kalle&lt;/User&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Connection" nillable="true" type="tns:Connection" />
	<xs:complexType name="Meta">
		<xs:annotation>
			<xs:appinfo />
			<xs:documentation>Applicable for operation UploadMessageStd and UploadMessageBin.
				Holds Meta information.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DateTime" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Timestamp.
						Request: &lt;DateTime&gt;[in format YYYYMMDD-HHMMSS]&lt;/DateTime&gt;
						Example of a request: &lt;DateTime&gt;20130101-125959]&lt;/DateTime&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EnvelopeType" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Type of envelope.
						Request: &lt;EnvelopeType&gt;[to be requested from service provider]&lt;/EnvelopeType&gt;
						Example of a request: &lt;EnvelopeType&gt;BIXENVELOPE&lt;/EnvelopeType&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EnvelopeVersion" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Version of envelope type.
						Request: &lt;EnvelopeVersion&gt;[to be requested from service provider]&lt;/EnvelopeVersion&gt;
						Example request: &lt;EnvelopeVersion&gt;1.0&lt;/EnvelopeVersion&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageAckRequest" type="xs:boolean">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional - Message ackonowledgement request.
						Request: &lt;MessageAckRequest&gt;[if message receive needs an acknowledgement set MessageAckRequest to "TRUE". Blank value is equal to
						"FALSE"&lt;/MessageAckRequest&gt;
						Example of a request: &lt;MessageAckRequest&gt;FALSE&lt;/MessageAckRequest&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageFileName" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Message file name.
						Example of a request: &lt;MessageFileName&gt;filename.txt&lt;/MessageFileName&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageId" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Message reference identity.
						Request: &lt;MessageId&gt;[message reference identity from sending system&lt;/MessageId&gt;
						Example request: &lt;MessageId&gt;abcde12345-12&lt;/MessageId&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageInfo" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional - Message information.
						Example request: &lt;MessageInfo&gt;[Additional information about the message]&lt;/MessageInfo&gt;
						Example of a request: &lt;MessageInfo&gt;&lt;/MessageInfo&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageTestFlag" type="xs:boolean">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional - Message test flag.
						Request: &lt;MessageTestFlag&gt;[if it's a test message set MessageTestFlag to "TRUE". Blank value is equal to "FALSE".]&lt;/MessageTestFlag&gt;
						Example of a request: &lt;MessageTestFlag&gt;TRUE&lt;/MessageTestFlag&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageType" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Type of message.
						Request: &lt;MessageType&gt;[to be requested from service provider]&lt;/MessageType&gt;
						Example of a request: &lt;MessageType&gt;ERRAND&lt;/MessageType&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Receiver" nillable="true" type="tns:Receiver">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Receiver information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Sender" nillable="true" type="tns:Sender">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Sender information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ServiceType" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional - Service type.
						Request: &lt;ServiceType&gt;[if needed - to be requested from service provider]&lt;/ServiceType&gt;
						Example of a request: &lt;ServiceType&gt;&lt;/ServiceType&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Meta" nillable="true" type="tns:Meta" />
	<xs:complexType name="Receiver">
		<xs:annotation>
			<xs:appinfo />
			<xs:documentation>Holds Meta/Receiver information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ReceiverAddress" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Receiver identification.
						Request: &lt;RecevierAddress&gt;[to be requested from service provider]&lt;/RecevierAddress&gt;
						Example of a request: &lt;RecevierAddress&gt;Kalle&lt;/RecevierAddress&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReceiverInfo" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional - Additional information about the receiver.
						Example of a request: &lt;ReceiverInfo&gt;&lt;/ReceiverInfo&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReceiverOperator" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional - Recevier operator identity. If receiver resides behind an operator set ReceiverOperator to "operator" value.
						Request: &lt;ReceiverOperator&gt;[if needed - to be requested from service provider]&lt;/ReceiverOperator&gt;
						Example of a request: &lt;ReceiverOperator&gt;&lt;/ReceiverOperator&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReceiverSubAddress" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional - Receiver identification level two.
						Request: &lt;ReceiverSubAddress&gt;[if needd - to be requested from service provider]&lt;/ReceiverSubAddress&gt;
						Example of a request: &lt;ReceiverSubAddress&gt;&lt;/ReceiverSubAddress&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Receiver" nillable="true" type="tns:Receiver" />
	<xs:complexType name="Sender">
		<xs:annotation>
			<xs:appinfo />
			<xs:documentation>Holds Meta/Sender information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SenderAddress" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Sender identification.
						Request: &lt;SenderAddress&gt;[to be requested from service provider]&lt;/SenderAddress&gt;
						Example of a request: &lt;SenderAddress&gt;Anders&lt;/SenderAddress&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SenderInfo" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional - Additional information about the sender.
						Example of a request: &lt;SenderInfo&gt;&lt;/SenderInfo&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SenderOperator" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional - Sender operator identity. If sender resides behind an operator set SenderOperator to "operator" value.
						Request: &lt;SenderOperator&gt;[if needed - to be requested from service provider]&lt;/SenderOperator&gt;
						Example of a request: &lt;SenderOperator&gt;&lt;/SenderOperator&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SenderSubAddress" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional - Sender identification level two.
						Request: &lt;SenderSubAddress&gt;[if needed - to be requested from service provider]&lt;/SenderSubAddress&gt;
						Example of a request: &lt;SenderSubAddress&gt;&lt;/SenderSubAddress&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Sender" nillable="true" type="tns:Sender" />
	<xs:complexType name="BinEnvelope">
		<xs:annotation>
			<xs:appinfo />
			<xs:documentation>Applicable for operation UploadMessageBin.
				Holds Envelope information.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="connection" nillable="true" type="tns:Connection">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Connection information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="message" nillable="true" type="xs:base64Binary">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Message data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="meta" nillable="true" type="tns:Meta">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Meta information.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="BinEnvelope" nillable="true" type="tns:BinEnvelope" />
	<xs:complexType name="Person">
		<xs:annotation>
			<xs:appinfo />
			<xs:documentation>Applicable for operation GetPerson and FetchPersons.
				Holds Person information.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="Address" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional for operation FetchPersons. N/A for operation GetPerson.
						Example request: &lt;Address&gt;andersväg%&lt;/Address&gt;
						Example response: &lt;Address&gt;Andersvägen 1&lt;/Address&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="BirthPlace" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional for operation FetchPersons. N/A for operation GetPerson.
						Example request: &lt;BirthPlace&gt;Skelle%&lt;/BirthPlace&gt;
						Example response: &lt;BirthPlace&gt;Skellefteå&lt;/BirthPlace&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="City" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional for operation FetchPersons. N/A for operation GetPerson.
						Example request: &lt;City&gt;%vattnet%&lt;/City&gt;
						Example response: &lt;City&gt;Andersvattnet&lt;/City&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="CivilStatus" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional for operation FetchPersons. N/A for operation GetPerson.
						Example request: &lt;CivilStatus&gt;OG&lt;/CivilStatus&gt;
						Example response: &lt;CivilStatus&gt;OG&lt;/CivilStatus&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Country" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>N/A for operation GetPerson and FetchPersons.
						Example response: &lt;Country&gt;Sverige&lt;/Country&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="FirstName" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional for operation FetchPersons. N/A for operation GetPerson.
						Example request: &lt;FirstName&gt;%Anders%&lt;/FirstName&gt;
						Example response: &lt;FirstName&gt;Lars Anders&lt;/FirstName&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="GivenName" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional for operation FetchPersons. N/A for operation GetPerson.
						Example request: &lt;GivenName&gt;%Olle%&lt;/GivenName&gt;
						Example response: &lt;GivenName&gt;Olle&lt;/GivenName&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="LastName" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional for operation FetchPersons. N/A for operation GetPerson.
						Example request: &lt;LastName&gt;%ersson&lt;/LastName&gt;
						Example response: &lt;LastName&gt;Andersson&lt;/LastName&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="PersonId" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory for operation GetPerson. N/A for operation FetchPersons.
						Example request: &lt;PersonId&gt;20130101-0000&lt;/PersonId&gt;
						Example response: &lt;PersonId&gt;20130101-0000&lt;/PersonId&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Relations" nillable="true" type="tns:ArrayOfRelation">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>N/A for operation GetPerson and FetchPersons.
						Example response: &lt;Country&gt;Sverige&lt;/Country&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="ZipCode" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional for operation FetchPersons. N/A for operation GetPerson.
						Example request: &lt;ZipCode&gt;%45&lt;/ZipCode&gt;
						Example response: &lt;ZipCode&gt;123 45&lt;/ZipCode&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Person" nillable="true" type="tns:Person" />
	<xs:complexType name="ArrayOfRelation">
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="Relation" nillable="true" type="tns:Relation" />
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ArrayOfRelation" nillable="true" type="tns:ArrayOfRelation" />
	<xs:complexType name="Relation">
		<xs:annotation>
			<xs:appinfo />
			<xs:documentation>Holds Person/Relation information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="GivenName" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Example response: &lt;GivenName&gt;Lars&lt;/GivenName&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="LastName" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Example response: &lt;LastName&gt;Larsson&lt;/LastName&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="RelationPersonId" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Example response: &lt;RelationPersonId&gt;20130101-0000&lt;/RelationPersonId&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Relationship" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Example response: &lt;Relationship&gt;OG&lt;/Relationship&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Relation" nillable="true" type="tns:Relation" />
	<xs:complexType name="ArrayOfPerson">
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="Person" nillable="true" type="tns:Person" />
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ArrayOfPerson" nillable="true" type="tns:ArrayOfPerson" />
	<xs:complexType name="Property">
		<xs:annotation>
			<xs:appinfo />
			<xs:documentation>Applicable for GetProperty and FetchProperties.
				Holds Property information.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="Address" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional for operation FetchProperties. N/A for operation GetProperty.
						Example request: &lt;Address&gt;%Andersv%&lt;/Address&gt;
						Example response: &lt;Address&gt;Andersvägen 12&lt;/Address&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="BuildingAddress" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional for operation FetchProperties. N/A for operation GetProperty.
						Example request: &lt;BuildingAddress&gt;Andersvägen 12%&lt;/BuildingAddress&gt;
						Example response: &lt;BuildingAddress&gt;Andersvägen 12:A&lt;/BuildingAddress&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Name" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional for operation GetProperty and FetchProperties.
						Example request: &lt;Name&gt;%BC 123:%&lt;/Name&gt;
						Example response: &lt;Name&gt;ABC 123:9&lt;/Name&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Owners" nillable="true" type="tns:ArrayOfOwner">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Optional for operation FetchProperties. N/A for operation GetProperty.
						Example response: &lt;OwnerId&gt;20130101-0000&lt;/OwnerId&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="PropertyId" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory for operation GetProperty. N/A for operation FetchProperties.
						Example request: &lt;PropertyId&gt;12345678&lt;/PropertyId&gt;
						Example response: &lt;PropertyId&gt;12345678&lt;/PropertyId&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Property" nillable="true" type="tns:Property" />
	<xs:complexType name="ArrayOfOwner">
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="Owner" nillable="true" type="tns:Owner" />
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ArrayOfOwner" nillable="true" type="tns:ArrayOfOwner" />
	<xs:complexType name="Owner">
		<xs:annotation>
			<xs:appinfo />
			<xs:documentation>Holds Property/Owner information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="GivenName" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Example response: &lt;GivenName&gt;Lars&lt;/GivenName&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="LastName" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Example response: &lt;LastName&gt;Larsson&lt;/LastName&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="OwnerId" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Example response: &lt;RelationPersonId&gt;20130101-0000&lt;/RelationPersonId&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Owner" nillable="true" type="tns:Owner" />
	<xs:complexType name="ArrayOfProperty">
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="Property" nillable="true" type="tns:Property" />
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ArrayOfProperty" nillable="true" type="tns:ArrayOfProperty" />
	<xs:complexType name="Status">
		<xs:annotation>
			<xs:appinfo />
			<xs:documentation>Applicable for operation GetStatus.
				Holds Status information.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="StatusCode" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Example okay response : &lt;StatusCode&gt;1&lt;/StatusCode&gt;
						Example NOT okay response : &lt;StatusCode&gt;[not equal to 1]&lt;/StatusCode&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="StatusDescription" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Example okay response: &lt;StatusDescription&gt;&lt;/StatusDescription&gt;
						Example NOT okay response : &lt;StatusCode&gt; Transfer failed - Authentification problem when sending to x system&lt;/StatusCode&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="TransferId" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Example request: &lt;TransferId&gt;#001A&lt;/TransferId&gt;
						Example okay response: &lt;TransferId&gt;#001A&lt;/TransferId&gt;
						Example NOT okay response : &lt;TransferId&gt;#001A&lt;/TransferId&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Status" nillable="true" type="tns:Status" />
	<xs:complexType name="ArrayOfQuestionData">
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="QuestionData" nillable="true" type="tns:QuestionData" />
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ArrayOfQuestionData" nillable="true" type="tns:ArrayOfQuestionData" />
	<xs:complexType name="QuestionData">
		<xs:annotation>
			<xs:appinfo />
			<xs:documentation>Applicable for operation QuestionAnswer.
				Holds Question information.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="Tag" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Request label.
						Example request: &lt;Tag&gt;Id&lt;/Tag&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Value" nillable="true" type="xs:base64Binary">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Request value.
						Example request: &lt;Value&gt;12345&lt;/Value&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="QuestionData" nillable="true" type="tns:QuestionData" />
	<xs:complexType name="ArrayOfAnswerData">
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="AnswerData" nillable="true" type="tns:AnswerData" />
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ArrayOfAnswerData" nillable="true" type="tns:ArrayOfAnswerData" />
	<xs:complexType name="AnswerData">
		<xs:annotation>
			<xs:appinfo />
			<xs:documentation>Applicable for operation QuestionAnswer.
				Holds Answer information.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="Tag" nillable="true" type="xs:string">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Answer label.
						Example request: &lt;Tag&gt;Id&lt;/Tag&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Value" nillable="true" type="xs:base64Binary">
				<xs:annotation>
					<xs:appinfo />
					<xs:documentation>Mandatory - Answer label.
						Example request: &lt;Value&gt;12345&lt;/Value&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="AnswerData" nillable="true" type="tns:AnswerData" />
</xs:schema>