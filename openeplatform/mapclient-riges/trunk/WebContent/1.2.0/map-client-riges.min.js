var mapClientScriptLocation;var mapClientScriptLocationFallback;var mapClientLanguages={DIMENSION_AND_ANGLE_SETTINGS:"Dimension and angle settings"};var mapInstances={};var version="1.2.0";var LoadFiles=function(a,k){var i=0;var b;var e;var j=document.styleSheets.length-1;for(index in a){var b=a[index];i++;if(g(b)=="css"){f(b);j++;if(!window.opera&&navigator.userAgent.indexOf("MSIE")==-1){c(j)}}else{d(b)}}function g(l){l=l.toLowerCase();var n=l.indexOf("js"),m=l.indexOf("css");if(n==-1&&m==-1){return false
}return n>m?"js":"css"}function f(l){var m=document.createElement("link");m.href=l;m.rel="stylesheet";m.type="text/css";m.onload=h;m.onreadystatechange=function(){if(this.readyState=="loaded"||this.readyState=="complete"){h()}};document.getElementsByTagName("head")[0].appendChild(m)}function d(m){var l=document.createElement("script");l.type="text/javascript";l.src=m;l.onload=h;document.getElementsByTagName("head")[0].appendChild(l)}function c(l){try{if(document.styleSheets[l].cssRules){h()}else{if(document.styleSheets[l].rules&&document.styleSheets[l].rules.length){h()
}else{setTimeout(function(){c(l)},250)}}}catch(m){setTimeout(function(){c(l)},250)}}function h(){i--;if(i==0){k();i=-1}}};(function(){if(!$("html").hasClass("map-client-riges")){Ext={buildSettings:{scopeResetCSS:true}};var g="map-client-riges.min.js";var e=new RegExp("(^|(.*?\\/))("+g+")(\\?|$)");var b=document.getElementsByTagName("script");for(var d=0;d<b.length;d++){var f=b[d].getAttribute("src");if(f){var c=f.match(e);if(c){mapClientScriptLocation=c[1];break}}}if(mapClientScriptLocation==undefined&&mapClientScriptLocationFallback!=undefined){mapClientScriptLocation=mapClientScriptLocationFallback.match(e)[1]
}var a=new Array(mapClientScriptLocation+"/ext/resources/css/ext-all-oep.css",mapClientScriptLocation+"/resources/OpenEMap.css",mapClientScriptLocation+"/../css/map-client-riges.css",mapClientScriptLocation+"/openlayers/theme/default/style.css");var b=new Array(mapClientScriptLocation+"/ext/ext-all.js",mapClientScriptLocation+"/ext/ext-theme-oep.js",mapClientScriptLocation+"/ext/locale/ext-lang-sv_SE.js",mapClientScriptLocation+"/openlayers/OpenLayers.js",mapClientScriptLocation+"/geoext2-all.js",mapClientScriptLocation+"/es5-shim.min.js",mapClientScriptLocation+"/OpenEMap-all.js");
LoadFiles(a,function(){loadScripts(b)});$("html").addClass("map-client-riges")}})();function loadScripts(c){var e=new Array(c.length);for(var d=0;d<c.length;d++){e[d]="<script src='"+c[d]+"' type='text/javascript'><\/script>"}if(e.length>0){var b=$("head");for(var d=0,a=e.length;d<a;d++){b.append(e[d])}}}function MapClientInstance(queryID,mapID){this.MAP_RESOLUTIONS=[256,128,36,12,4,2,1,0.5,0.25,0.125];this.mapID=mapID;this.mapDiv=$("#"+mapID);this.map;this.featureDialogs={};this.dialog;this.preview;
this.externalGraphicsLocation=mapClientScriptLocation+"images";this.mapImageLocation=mapClientScriptLocation+"/resources/images/";this.config;this.originalTools;this.layerMapping={};this.enableEdgeLabeling=false;var instance=this;mapInstances[queryID]=instance;instance.setCustomConfig=function(config,customConfig,preview){if(customConfig.extent){config.extent=customConfig.extent}if(customConfig.search&&config.gui.searchFastighet){config.gui.searchFastighet={renderTo:customConfig.search.renderTo};
if(customConfig.search.zoom){config.gui.searchFastighet.zoom=instance.MAP_RESOLUTIONS.indexOf(customConfig.search.zoom/4000)}$("#"+customConfig.search.renderTo).show();if(customConfig.search.basePath){config.basePath=customConfig.search.basePath}if(customConfig.search.lmUser){OpenEMap.lmUser=customConfig.search.lmUser}}if(customConfig.objectConfig&&config.gui.objectConfig){config.gui.objectConfig={renderTo:customConfig.objectConfig.renderTo}}else{config.gui.objectConfig=false}if(customConfig.searchCoordinate&&config.gui.searchCoordinate){config.gui.searchCoordinate={renderTo:customConfig.searchCoordinate.renderTo};
if(customConfig.searchCoordinate.zoom){config.gui.searchCoordinate.zoom=instance.MAP_RESOLUTIONS.indexOf(customConfig.searchCoordinate.zoom/4000)}$("#"+customConfig.searchCoordinate.renderTo).show()}if(customConfig.enableEdgeLabeling){instance.enableEdgeLabeling=true}if(customConfig.basePathMapFish){config.basePathMapFish=customConfig.basePathMapFish}instance.originalTools=config.tools;if(preview){config.gui.zoomTools=false;config.gui.baseLayers=false;config.gui.searchFastighet=false;config.gui.toolbar=false;
config.gui.searchCoordinate=false;config.tools=false}};var initLoadingDialog=null;instance.init=function(configURL,config,customConfig,preview){instance.preview=preview;if(configURL){$.getJSON(configURL,function(result){try{config=eval(result)}catch(e){instance.showValidationError("Felaktigt format på konfigurationen","Ett fel uppstod när kartkonfigurationen skulle hämtas, kontakta administratören!");return}if(!config){instance.showValidationError("Ingen kartkonfiguration","Ingen kartkonfiguration hittades, kontakta administratören!");
return}else{waitUntilMapIsCreated(instance,config,customConfig,preview)}}).error(function(response,status,xhr){if(status=="parsererror"){instance.showValidationError("Felaktigt format på konfigurationen","Ett fel uppstod när kartkonfigurationen skulle hämtas, kontakta administratören!")}else{instance.showValidationError("Anslutningsfel","Kan inte ansluta till servern för hämtning av kartkonfiguration, kontakta administratören!")}return})}else{if(!config){instance.showValidationError("Ingen kartkonfiguration","Ingen kartkonfiguration finns angiven!");
return}else{waitUntilMapIsCreated(instance,config,customConfig,preview)}}};instance.initMapClient=function(config){instance.showLoadingDialog=function(message){var loadingDialog=new Ext.LoadMask(Ext.get(mapID),{msg:message,centered:true});loadingDialog.show();return loadingDialog};initLoadingDialog=instance.showLoadingDialog("Laddar karta...");instance.mapDiv.bind("map-client-riges.loaded",instance.mapLoadedEventCallback);config.gui.map={renderTo:mapID};OpenEMap.basePathImages=instance.mapImageLocation;
instance.map=Ext.create("OpenEMap.Client");if(config.basePath){instance.map.basePath=config.basePath;OpenEMap.basePathLM=config.basePath}if(config.basePathMapFish){OpenEMap.basePathMapFish=config.basePathMapFish}var options={theme:null};options.gui=config.gui;instance.config=config;if(instance.config.layers){$.each(instance.config.layers,function(i,layer){if(layer.params){instance.layerMapping[layer.name]=layer.params.layers}})}instance.map.configure(config,options);if(instance.preview){$.each(instance.map.gui.mapPanel.map.getControlsByClass("OpenLayers.Control.Navigation"),function(i,control){control.deactivate()
})}initLoadingDialog.hide();instance.mapDiv.trigger("map-client-riges.loaded",[instance]);instance.map.gui.mapPanel.map.events.register("move",this,function(e){instance.mapMovedCallback(e,instance)});if(instance.map.gui.mapPanel&&instance.map.gui.mapPanel.drawLayer){instance.map.gui.mapPanel.drawLayer.events.register("featureadded",null,function(e){instance.featureAddedCallback(e,instance)});instance.map.gui.mapPanel.drawLayer.events.register("featureremoved",null,function(e){instance.removeFeatureDialog(e.feature);
instance.featureRemovedCallback(e,instance)});instance.map.gui.mapPanel.drawLayer.events.register("beforefeatureadded",null,function(e){return instance.beforeFeatureAddedCallback(e,instance)});instance.map.gui.mapPanel.drawLayer.events.register("sketchcomplete",null,function(e){return instance.sketchCompletedCallback(e,instance)});instance.map.gui.mapPanel.map.events.register("changelayer",null,function(e){if(e.property=="visibility"){instance.layerVisibilityChangedCallback(e,instance)}});instance.map.gui.mapPanel.map.events.register("changebaselayer",null,function(e){instance.baseLayerChangedCallback(e,instance)
});if(instance.enableEdgeLabeling){var labels=new OpenLayers.Rule({filter:new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:"type",value:"label"}),symbolizer:{pointRadius:20,fillOpacity:0,strokeOpacity:0,label:"${label}"}});instance.map.gui.mapPanel.drawLayer.styleMap.styles["default"].addRules([labels]);instance.map.toggleEdgeLabels()}}if(instance.map.gui.searchCoordinate){var coordinateMarkerStyle=new OpenLayers.Style({pointRadius:10,externalGraphic:instance.externalGraphicsLocation+"/pin-added.png"});
var coordinateMarkerLayer=new OpenLayers.Layer.Vector("SearchCoordinateLayer",{displayInLayerSwitcher:false,styleMap:new OpenLayers.StyleMap(coordinateMarkerStyle)});instance.map.gui.mapPanel.map.addLayer(coordinateMarkerLayer);instance.map.gui.searchCoordinate.on("searchcomplete",function(coordinates){coordinateMarkerLayer.destroyFeatures();var point=new OpenLayers.Geometry.Point(coordinates[0],coordinates[1]);var marker=new OpenLayers.Feature.Vector(point);coordinateMarkerLayer.addFeatures([marker])
})}if(instance.config.gui.objectConfig&&instance.config.gui.objectConfig.renderTo){instance.mapDiv.on("click",function(e){var $configWrapper=$("#"+instance.config.gui.objectConfig.renderTo);var $header=$configWrapper.find("span.header");if($configWrapper.find(".x-panel:visible").length>0){if($header.length==0){$configWrapper.prepend("<span class='header'>"+mapClientLanguages.DIMENSION_AND_ANGLE_SETTINGS+"</span>")}}else{$header.remove()}});instance.mapDiv.trigger("click")}};instance.zoomToScale=function(scale){instance.map.gui.mapPanel.map.zoomToScale(scale)
};instance.showValidationError=function(title,message){$("#query_"+queryID).find("article").addClass("error").addClass("jserror").before('<div class="info-box first error jserror"><span><strong data-icon-before="!">'+title+". </strong>"+message+'</span><div class="marker"></div></div>')};instance.removeValidationErrors=function(){$("#query_"+queryID).find("article.jserror").removeClass("error").removeClass("jserror").prev(".jserror").remove();instance.map.gui.mapPanel.map.updateSize()};instance.showFeatureDialog=function(feature,layer,message,contentSize,showCloseButton){var $message=null;
if(message.jquery){$message=message}else{$message=$(message)}var popup=new OpenLayers.Popup.Anchored("map-client-messagebox_"+mapID,feature.geometry.getBounds().getCenterLonLat(),contentSize,$message.html()+"<div class='marker' />",null,showCloseButton);popup.displayClass="map-client-messagebox";popup.autoSize=false;var featureHeight=feature.geometry.getBounds().getHeight();var layerStyles=layer.styleMap.styles["default"];if(featureHeight==0){if(layerStyles.defaultStyle.pointRadius=="${getSize}"){featureHeight=layerStyles.context.getSize(feature)
}else{if(layerStyles.defaultStyle.pointRadius){featureHeight=layerStyles.defaultStyle.pointRadius}}}var anchor={size:new OpenLayers.Size(0,0),offset:new OpenLayers.Pixel(-188,(featureHeight/2)*-1)};popup.anchor=anchor;popup.panMapIfOutOfView=true;popup.relativePosition="tr";popup.calculateRelativePosition=function(){return"tr"};feature.popup=popup;instance.map.gui.mapPanel.map.addPopup(popup);instance.featureDialogs[feature.id]=popup};instance.removeFeatureDialog=function(feature){var popup=instance.featureDialogs[feature.id];
if(popup!=null){instance.map.gui.mapPanel.map.removePopup(popup);popup=null}};instance.showDialog=function(message,showCloseButton,closeButtonCallback){var $message=null;if(message.jquery){$message=message.clone();$message.show()}else{$message=$(message)}var $dialog=$("<div class='mapquerydialog olPopup'><div class='olPopupContent'></div></div>");var $content=$dialog.find(".olPopupContent");$content.append($message);if(showCloseButton){var $closeBox=$("<div class='olPopupCloseBox' />");$closeBox.click(function(e){$dialog.close(e)
});$content.append($closeBox)}$dialog.close=function(e){if(closeButtonCallback){closeButtonCallback($dialog)}$dialog.remove();Ext.get(instance.mapID).unmask()};Ext.get(instance.mapID).mask();instance.mapDiv.append($dialog);$dialog.css({left:(instance.mapDiv.width()/2)-($dialog.width()/2),top:(instance.mapDiv.height()/2)-($dialog.height()/2)});instance.dialog=$dialog};instance.getVisibleLayers=function(){var visibleLayers=[];var layers=instance.map.gui.mapPanel.map.layers;for(var i=0;i<layers.length;
i++){var layer=layers[i];if(layer.visibility==true){visibleLayers.push(layer)}}return visibleLayers};instance.getVisibleBaseLayers=function(){var visibleBaseLayers=[];var layers=instance.map.gui.mapPanel.map.layers;for(var i=0;i<layers.length;i++){var layer=layers[i];if(layer.isBaseLayer&&layer.visibility==true){visibleBaseLayers.push(layer)}}return visibleBaseLayers};instance.mapMovedCallback=function(e,instance){};instance.featureAddedCallback=function(e,instance){};instance.featureRemovedCallback=function(e,instance){};
instance.beforeFeatureAddedCallback=function(e,instance){};instance.sketchCompletedCallback=function(e,instance){};instance.mapLoadedEventCallback=function(object,instance){};instance.layerVisibilityChangedCallback=function(e,instance){};instance.baseLayerChangedCallback=function(e,instance){};return instance}function waitUntilMapIsCreated(b,c,a,d){if(!(typeof OpenEMap==="undefined")&&!(typeof OpenEMap.Client==="undefined")){if(a){b.setCustomConfig(c,a,d)}b.initMapClient(c)}else{setTimeout(function(){waitUntilMapIsCreated(b,c,a,d)
},5)}};