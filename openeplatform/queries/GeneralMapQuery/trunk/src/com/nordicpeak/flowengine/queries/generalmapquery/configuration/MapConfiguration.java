package com.nordicpeak.flowengine.queries.generalmapquery.configuration;

import java.io.Serializable;
import java.lang.reflect.Field;
import java.util.List;

import org.w3c.dom.Document;
import org.w3c.dom.Element;

import com.nordicpeak.flowengine.queries.generalmapquery.GeneralMapQuery;

import se.unlogic.standardutils.dao.annotations.DAOManaged;
import se.unlogic.standardutils.dao.annotations.Key;
import se.unlogic.standardutils.dao.annotations.ManyToMany;
import se.unlogic.standardutils.dao.annotations.OneToMany;
import se.unlogic.standardutils.dao.annotations.Table;
import se.unlogic.standardutils.reflection.ReflectionUtils;
import se.unlogic.standardutils.xml.GeneratedElementable;
import se.unlogic.standardutils.xml.XMLElement;

@Table(name = "general_map_query_mapconfigurations")
@XMLElement
public class MapConfiguration extends GeneratedElementable implements Serializable {

	private static final long serialVersionUID = 7060743730116053786L;

	public static final Field MAPTOOLS_RELATION = ReflectionUtils.getField(MapConfiguration.class, "mapTools");

	@Key
	@DAOManaged(autoGenerated = true)
	@XMLElement
	private Integer mapConfigurationID;

	@DAOManaged
	@XMLElement
	private String name;

	@DAOManaged
	@XMLElement
	private String mapConfigTemplate;

	@DAOManaged
	@XMLElement
	private String openEmapVersion;

	@DAOManaged
	@XMLElement
	private boolean enabled;

	@DAOManaged
	@ManyToMany(linkTable = "general_map_query_mapconfiguration_tools")
	@XMLElement
	private List<MapTool> mapTools;

	@DAOManaged
	@XMLElement
	private Integer printConfigurationID;

	@DAOManaged
	@OneToMany
	@XMLElement
	private List<GeneralMapQuery> generalMapQueries;

	public Integer getMapConfigurationID() {

		return mapConfigurationID;
	}

	public void setMapConfigurationID(Integer mapConfigurationID) {

		this.mapConfigurationID = mapConfigurationID;
	}

	public String getName() {

		return name;
	}

	public void setName(String name) {

		this.name = name;
	}

	public boolean isEnabled() {

		return enabled;
	}

	public void setEnabled(boolean enabled) {

		this.enabled = enabled;
	}

	public String getMapConfigTemplate() {

		return mapConfigTemplate;
	}

	public void setMapConfigTemplate(String mapConfigTemplate) {

		this.mapConfigTemplate = mapConfigTemplate;
	}

	public List<MapTool> getMapTools() {

		return mapTools;
	}

	public void setMapTools(List<MapTool> mapTools) {

		this.mapTools = mapTools;
	}

	public String getOpenEmapVersion() {

		return openEmapVersion;
	}

	public void setOpenEmapVersion(String openEmapVersion) {

		this.openEmapVersion = openEmapVersion;
	}

	public List<GeneralMapQuery> getGeneralMapQueries() {

		return generalMapQueries;
	}

	public void setGeneralMapQueries(List<GeneralMapQuery> generalMapQueries) {

		this.generalMapQueries = generalMapQueries;
	}

	public Integer getPrintConfigurationID() {

		return printConfigurationID;
	}

	public void setPrintConfigurationID(Integer printConfigurationID) {

		this.printConfigurationID = printConfigurationID;
	}

	@Override
	public Element toXML(Document doc) {

		return super.toXML(doc);
	}

}
