package com.nordicpeak.flowengine.queries.generalmapquery.configuration;

import java.io.Serializable;
import java.sql.Blob;
import java.util.List;

import se.unlogic.standardutils.dao.annotations.DAOManaged;
import se.unlogic.standardutils.dao.annotations.Key;
import se.unlogic.standardutils.dao.annotations.ManyToMany;
import se.unlogic.standardutils.dao.annotations.OneToMany;
import se.unlogic.standardutils.dao.annotations.OrderBy;
import se.unlogic.standardutils.dao.annotations.Table;
import se.unlogic.standardutils.xml.GeneratedElementable;
import se.unlogic.standardutils.xml.XMLElement;

import com.nordicpeak.flowengine.queries.generalmapquery.GeneralMapQueryTool;

@Table(name = "general_map_query_tools")
@XMLElement
public class MapTool extends GeneratedElementable implements Serializable, Comparable<MapTool> {

	private static final long serialVersionUID = -8540098060557610967L;

	@Key
	@DAOManaged(autoGenerated = true)
	@XMLElement
	private Integer toolID;

	@DAOManaged
	@XMLElement
	private String tooltip;

	@DAOManaged
	@XMLElement
	private MapToolType toolType;

	@DAOManaged
	@XMLElement
	private String openEmapVersion;

	@DAOManaged
	private transient Blob icon;

	@DAOManaged
	@XMLElement
	private String configTemplate;

	@OrderBy
	@DAOManaged
	@XMLElement
	private Integer sortIndex;

	@DAOManaged
	@XMLElement
	private String alias;

	@DAOManaged
	@ManyToMany(linkTable = "general_map_query_mapconfiguration_tools")
	@XMLElement
	private List<MapConfiguration> mapConfigurations;

	@DAOManaged
	@OneToMany
	@XMLElement
	private List<GeneralMapQueryTool> mapQueryTools;

	public Integer getToolID() {

		return toolID;
	}

	public void setToolID(Integer toolID) {

		this.toolID = toolID;
	}

	public String getTooltip() {

		return tooltip;
	}

	public void setTooltip(String tooltip) {

		this.tooltip = tooltip;
	}

	public MapToolType getToolType() {

		return toolType;
	}

	public void setToolType(MapToolType toolType) {

		this.toolType = toolType;
	}

	public Blob getIcon() {

		return icon;
	}

	public void setIcon(Blob icon) {

		this.icon = icon;
	}

	public String getConfigTemplate() {

		return configTemplate;
	}

	public void setConfigTemplate(String configTemplate) {

		this.configTemplate = configTemplate;
	}

	public Integer getSortIndex() {

		return sortIndex;
	}

	public void setSortIndex(Integer sortIndex) {

		this.sortIndex = sortIndex;
	}

	public String getOpenEmapVersion() {

		return openEmapVersion;
	}

	public void setOpenEmapVersion(String openEmapVersion) {

		this.openEmapVersion = openEmapVersion;
	}

	public String getAlias() {

		return alias;
	}

	public void setAlias(String alias) {

		this.alias = alias;
	}

	public List<MapConfiguration> getMapConfigurations() {

		return mapConfigurations;
	}

	public void setMapConfigurations(List<MapConfiguration> mapConfigurations) {

		this.mapConfigurations = mapConfigurations;
	}

	public List<GeneralMapQueryTool> getMapQueryTools() {

		return mapQueryTools;
	}

	public void setMapQueryTools(List<GeneralMapQueryTool> mapQueryTools) {

		this.mapQueryTools = mapQueryTools;
	}

	@Override
	public int compareTo(MapTool o) {

		return sortIndex.compareTo(o.getSortIndex());
	}

}
