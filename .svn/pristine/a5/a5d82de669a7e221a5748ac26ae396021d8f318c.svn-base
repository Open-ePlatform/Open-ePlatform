Ext.define("OpenEMap.action.Action",{extend:GeoExt.Action,constructor:function(a){var d=a.mapPanel;var c=d.map;if(a.minScale||a.maxScale){if(!a.minScale){a.minScale=0}if(!a.maxScale){a.maxScale=99999999999999}var b=function(){if(c.getScale()>=a.maxScale||c.getScale()<=a.minScale){this.disable()}else{this.enable()}};c.events.register("zoomend",this,b)}this.callParent(arguments)},toggle:function(){}});Ext.define("OpenEMap.action.DeleteAllFeatures",{extend:OpenEMap.action.Action,constructor:function(a){a.control=new OpenLayers.Control.Button({trigger:function(){a.mapPanel.drawLayer.removeAllFeatures()
}});a.iconCls=a.iconCls||"action-deleteallfeatures";a.tooltip=a.tooltip||"Rensa kartan fr&aring;n ritade objekt.";this.callParent(arguments)}});Ext.define("OpenEMap.action.DeleteGeometry",{extend:OpenEMap.action.Action,constructor:function(a){var c=a.mapPanel;var b=c.drawLayer;a.handler=function(){b.selectedFeatures.forEach(function(d){c.map.controls.forEach(function(e){if(e.CLASS_NAME=="OpenLayers.Control.ModifyFeature"&&e.active){e.unselectFeature(d)}});b.destroyFeatures([d])})};a.iconCls=a.iconCls||"action-deletegeometry";
a.tooltip=a.tooltip||"Ta bort ritat objekt";this.callParent(arguments)}});Ext.define("OpenEMap.action.DeleteMeasure",{extend:OpenEMap.action.Action,constructor:function(a){a.control=new OpenLayers.Control.Button({trigger:function(){a.mapPanel.measureLayer.removeAllFeatures();a.mapPanel.measureLayerArea.removeAllFeatures();a.mapPanel.measureLayerLength.removeAllFeatures();a.mapPanel.measureLayerSegments.removeAllFeatures();a.mapPanel.map.controls.forEach(function(b){if(b instanceof OpenLayers.Control.DynamicMeasure){b.deactivate()
}})}});a.iconCls=a.iconCls||"action-deletemeasure";a.tooltip=a.tooltip||"Ta bort m&auml;tning(ar).";this.callParent(arguments)}});Ext.define("OpenEMap.view.DetailReportResults",{extend:Ext.view.View,autoScroll:true,padding:5,geometry:null,initComponent:function(){this.store=Ext.create("GeoExt.data.FeatureStore",{features:[],fields:["COUNT","CATEGORY","CLARIFICAT","DESCRIPTIO","REMARK","MAPTEXT","MAX","MIN","HEIGHT"]});this.tpl=new Ext.XTemplate("<h3>"+this.fbet+"</h3>","<h4>"+this.aktbet+"</h4>",'<tpl for=".">','<div style="margin-bottom: 10px;" class="thumb-wrap">',"<h4>{COUNT}. {DESCRIPTIO}</h4>","<p>{REMARK}</p>","</div>","</tpl>");
this.itemSelector="div.thumb-wrap";this.callParent(arguments);this.doSearch()},doSearch:function(){var a=this.store;var c=this.layer;var e=this.geometry;c.destroyFeatures();var b=Ext.apply({url:"wfs",version:"1.1.0",srsName:"EPSG:3006",featureType:"EgenskapsBestammelser_yta",featurePrefix:"RIGES"});var d=new OpenLayers.Protocol.WFS(b);d.read({filter:new OpenLayers.Filter({type:OpenLayers.Filter.Spatial.INTERSECTS,value:e}),callback:function(f){var g=f.features;if(!g){return}g.forEach(function(h){h.attributes.COUNT=a.getCount()+1;
a.addFeatures([h])});c.addFeatures(g)}})},onSelect:function(c,a,b){var g={};var e=a.raw.feature;var d=a.raw.layer;var f=function(i){if(d.metadata.attributes[i]){var h=d.metadata.attributes[i].alias||i;g[h]=e.attributes[i]}};if(e){if(d.metadata&&d.metadata.attributes){Object.keys(e.attributes).forEach(f)}else{g=e.attributes}this.mapPanel.searchLayer.selectedFeatures.forEach(function(h){this.mapPanel.selectControl.unselect(h)},this);if(a.raw.feature.layer){this.mapPanel.selectControl.select(e)}}}});
Ext.define("OpenEMap.action.DetailReport",{extend:OpenEMap.action.Action,constructor:function(b){var e=b.mapPanel;var c=e.searchLayer;var d=b.map;var a=OpenLayers.Class(OpenLayers.Control,{initialize:function(f){OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Click(this,{click:this.onClick},this.handlerOptions)},onClick:function(h){e.setLoading(true);c.destroyFeatures();var j=d.getLonLatFromPixel(h.xy);var g=j.lon;var k=j.lat;var f=new OpenLayers.Geometry.Point(g,k);
var i=new OpenLayers.Feature.Vector(f);c.addFeatures([i]);OpenEMap.requestLM({url:"enhetsomraden?x="+g+"&y="+k,success:function(l){var p=new OpenLayers.Format.GeoJSON().read(l.responseText);c.addFeatures(p);var o=c.getDataExtent();d.zoomToExtent(o);var r=p[0].geometry;var n=p[0].attributes.name;var m=Ext.apply({url:"wfs",version:"1.1.0",srsName:"EPSG:3006",featureType:"DetaljplanGallande_yta",featurePrefix:"RIGES"});var q=new OpenLayers.Protocol.WFS(m);q.read({filter:new OpenLayers.Filter({type:OpenLayers.Filter.Spatial.INTERSECTS,value:r}),callback:function(t){var u=t.features;
if(u&&u.length>0){c.addFeatures(u);var v=Ext.create("OpenEMap.view.DetailReportResults",{mapPanel:e,fbet:n,aktbet:u[0].attributes.AKTBET,geometry:u[0].geometry,layer:e.drawLayer});var s=Ext.create("GeoExt.window.Popup",{title:"Rapport",anchored:false,unpinnable:false,draggable:true,map:e,maximizable:false,minimizable:false,resizable:true,width:300,height:400,layout:"fit",items:v,collapsible:false});s.show()}}})},scope:this,callback:function(){e.setLoading(false)}})}});b.control=new a({type:OpenLayers.Control.TYPE_TOGGLE});
b.iconCls=b.iconCls||"action-detailreport";b.tooltip=b.tooltip||"Detaljerad rapport";b.toggleGroup="extraTools";this.callParent(arguments)}});Ext.define("OpenEMap.action.DrawGeometry",{extend:OpenEMap.action.Action,isText:function(b){if(b){var a=b.geometry==="Point"||b.geometry instanceof OpenLayers.Geometry.Point;if(a){var c=b.attributes&&b.attributes.type&&b.attributes.type==="label";return c}}return false},constructor:function(a){var d=a.mapPanel;var b=d.drawLayer;a.attributes=a.attributes||{};
a.geometry=a.geometry||"Polygon";var c=OpenLayers.Class(OpenLayers.Control.DrawFeature,{drawFeature:function(g){var e=new OpenLayers.Feature.Vector(g,a.attributes,a.style);var f=this.layer.events.triggerEvent("sketchcomplete",{feature:e});if(f!==false){e.state=OpenLayers.State.INSERT;this.layer.addFeatures([e]);this.featureAdded(e);this.events.triggerEvent("featureadded",{feature:e})}}});a.control=new c(b,OpenLayers.Handler[a.geometry]);b.events.register("beforefeatureadded",this,function(e){if(this.isText(e.feature)){if(e.feature.state||e.feature.state==="insert"){Ext.Msg.prompt("Text","Mata in text:",function(f,g){if(f=="ok"){e.feature.attributes.label=g;
e.feature.data.label=g;b.redraw()}})}}});a.iconCls=a.geometry==="Polygon"?"action-drawpolygon":a.geometry==="Path"?"action-drawline":a.geometry==="Point"?"action-drawpoint":"action-drawgeometry";if(!a.tooltip){a.tooltip=a.geometry==="Polygon"?"Rita område":a.geometry==="Path"?"Rita linje":a.geometry==="Point"?"Rita punkt":"Rita geometri";if(this.isText(a)){a.tooltip="Placera ut text.";a.iconCls="action-drawtext"}}a.toggleGroup="extraTools";this.callParent(arguments)}});Ext.define("OpenEMap.ObjectFactory",{toPoint:function(a){return new OpenLayers.Geometry.Point(a[0],a[1])
},createR:function(e){var a=e.x;var h=e.y;var c=e.l;var b=e.w;var g=[[a,h],[a,h-c],[a+b,h-c],[a+b,h]];var d=new OpenLayers.Geometry.LinearRing(g.map(this.toPoint));var f=new OpenLayers.Geometry.Polygon([d]);return f},createL:function(a){var g=a.x;var d=a.y;var b=a.l;var h=a.w;var j=a.m1;var i=a.m2;var f=[[g,d],[g,d-h],[g+j,d-h],[g+j,d-i],[g+b,d-i],[g+b,d]];var c=new OpenLayers.Geometry.LinearRing(f.map(this.toPoint));var e=new OpenLayers.Geometry.Polygon([c]);return e},createD:function(b){var h=b.x;
var e=b.y;var c=b.l;var i=b.w;var k=b.m1;var j=b.m2;var a=(c-k)/2;var g=[[h,e],[h,e-i+a],[h+a,e-i],[h+c-a,e-i],[h+c,e-i+a],[h+c,e]];var d=new OpenLayers.Geometry.LinearRing(g.map(this.toPoint));var f=new OpenLayers.Geometry.Polygon([d]);return f},createO:function(b){var f=b.x;var d=b.y;var c=b.l;var h=b.w;var j=b.m1;var i=b.m2;var a=((j/2)*(Math.sqrt((4+(2*Math.SQRT2)))));var g=new OpenLayers.Geometry.Point(f+a,d-a);var e=OpenLayers.Geometry.Polygon.createRegularPolygon(g,a,8);return e},figurHooks:function(c){var b=c.geometry.move;
c.geometry.move=function(d,e){c.attributes.config.x+=d;c.attributes.config.y+=e;b.apply(c.geometry,arguments)};var a=c.geometry.rotate;c.geometry.rotate=function(e,d){c.attributes.config.angle+=e;a.apply(c.geometry,arguments)}},create:function(c,b,f){var g;if(c.type=="R"){g=this.createR(c)}else{if(c.type=="L"){g=this.createL(c)}else{if(c.type=="D"){g=this.createD(c)}else{g=this.createO(c)}}}var a=g.getCentroid();var e=new OpenLayers.Geometry.Point(a.x,a.y);g.rotate(c.angle,e);var d=new OpenLayers.Feature.Vector(g,b,f);
this.figurHooks(d);d.attributes.config=c;return d}});Ext.define("OpenEMap.view.ObjectConfig",{extend:Ext.form.Panel,statics:{config:{type:"R",w:10,l:10,m1:2,m2:2,angle:0}},fieldDefaults:{labelWidth:60},autoHeight:true,width:400,border:false,selectedFeature:undefined,layer:undefined,factory:undefined,hidden:true,defaults:{border:false},typeLabel:"Type",widthLabel:"Width",lengthLabel:"Length",m1Label:"M1",m2Label:"M2",angleLabel:"Angle",initComponent:function(){this.layer=this.mapPanel.drawLayer;this.factory=Ext.create("OpenEMap.ObjectFactory");
var b={xtype:"radiogroup",vertical:true,fieldLabel:this.typeLabel,itemId:"type",hidden:true,items:[{boxLabel:'<div class="objectconfig-radio-r"></div>',name:"rb",inputValue:"R",checked:true},{boxLabel:'<div class="objectconfig-radio-l"></div>',name:"rb",enabled:false,inputValue:"L"},{boxLabel:'<div class="objectconfig-radio-d"></div>',name:"rb",enabled:false,inputValue:"D"},{boxLabel:'<div class="objectconfig-radio-o"></div>',name:"rb",enabled:false,inputValue:"O"}],listeners:{change:function(d,c){this.config.type=c.rb;
this.updateHelpImage(this.config.type);this.setFormItemVisibility(this.config.type);this.createObject()},scope:this}};var a=[];a.push(b);a=a.concat([{xtype:"numberfield",fieldLabel:this.widthLabel,itemId:"w",minValue:0,listeners:{change:function(d,c){this.config.w=c;this.createObject()},scope:this}},{xtype:"numberfield",fieldLabel:this.lengthLabel,itemId:"l",minValue:0,listeners:{change:function(d,c){this.config.l=c;this.createObject()},scope:this}},{xtype:"numberfield",fieldLabel:this.m1Label,itemId:"m1",minValue:0,listeners:{change:function(d,c){this.config.m1=c;
this.createObject()},scope:this}},{xtype:"numberfield",fieldLabel:this.m2Label,itemId:"m2",minValue:0,listeners:{change:function(d,c){this.config.m2=c;this.createObject()},scope:this}},{xtype:"numberfield",itemId:"angle",fieldLabel:this.angleLabel,value:0,listeners:{change:function(d,c){this.config.angle=c;this.createObject()},scope:this}}]);this.attributeFields=Ext.create("Ext.container.Container",{title:"Attributes"});a.push(this.attributeFields);this.items=[{layout:"column",defaults:{border:false},padding:5,items:[{width:180,layout:"form",items:a},{columnWidth:1,padding:5,items:{itemId:"objectimage",border:false,height:200}}]}];
this.layer.events.register("featuremodified",this,this.onFeaturemodified);this.layer.events.register("beforefeatureselected",this,this.onBeforefeatureselected);this.layer.events.register("featureunselected",this,this.onFeatureunselected);this.callParent(arguments)},setConfig:function(a){if(a===undefined){this.config=Ext.clone(OpenEMap.view.ObjectConfig.config);this.down("#type").show()}else{if(a.type){this.config=Ext.clone(a);Ext.applyIf(this.config,OpenEMap.view.ObjectConfig.config);this.down("#type").hide()
}else{this.config=Ext.clone(a);Ext.applyIf(this.config,OpenEMap.view.ObjectConfig.config);this.down("#type").show()}}this.setFormValues();this.show();return this.config},setFormValues:function(){if(this.config){this.down("#type").setValue({rb:this.config.type});this.updateHelpImage(this.config.type);this.down("#w").setRawValue(this.config.w);this.down("#l").setRawValue(this.config.l);this.down("#m1").setRawValue(this.config.m1);this.down("#m2").setRawValue(this.config.m2);this.down("#angle").setRawValue(this.config.angle);
this.setFormItemVisibility(this.config.type);this.down("#angle").show()}else{this.down("#type").hide();this.down("#w").hide();this.down("#l").hide();this.down("#m1").hide();this.down("#m2").hide();this.down("#angle").hide();this.down("#objectimage").hide()}this.attributeFields.removeAll();if(this.selectedFeature){Object.keys(this.selectedFeature.attributes).forEach(function(a){this.createAttributeField(this.selectedFeature,a)},this)}this.doLayout()},createAttributeField:function(c,b){if(b=="config"||b=="metadata"){return
}var a=c.attributes.metadata;if(a&&a[b]&&a[b].hidden){return}var d=c.attributes[b];this.attributeFields.add({xtype:"textfield",fieldLabel:b,value:d,listeners:{change:function(f,e){this.selectedFeature.attributes[b]=e;this.layer.drawFeature(this.selectedFeature)},scope:this}})},setFormItemVisibility:function(a){if(a=="R"){this.down("#w").show();this.down("#l").show();this.down("#m1").hide();this.down("#m2").hide()}else{if(a=="L"){this.down("#w").show();this.down("#l").show();this.down("#m1").show();
this.down("#m2").show()}else{if(a=="D"){this.down("#w").show();this.down("#l").show();this.down("#m1").show();this.down("#m2").hide()}else{if(a=="O"){this.down("#w").hide();this.down("#l").hide();this.down("#m1").show();this.down("#m2").hide()}}}}},onFeaturemodified:function(b){var a=b.feature;config=a.attributes.config;if(!config){return}this.down("#angle").setRawValue(config.angle)},onBeforefeatureselected:function(c){var a=c.feature;this.selectedFeature=a;this.config=a.attributes.config;var b=this.gui.activeAction;
if(b&&b.control instanceof OpenLayers.Control.ModifyFeature){if(this.config&&(b.control._mode&OpenLayers.Control.ModifyFeature.RESHAPE)){b.control.mode=b.control._mode^OpenLayers.Control.ModifyFeature.RESHAPE}else{b.control.mode=b.control._mode}b.control.resetVertices()}this.show();this.setFormValues()},onFeatureunselected:function(a){if(this.layer.selectedFeatures.length===0){this.hide()}this.selectedFeature=undefined},createObject:function(a,d,b){if(this.selectedFeature&&this.selectedFeature.attributes.config){var c=this.factory.create(this.config,b).geometry;
this.selectedFeature.geometry.removeComponent(this.selectedFeature.geometry.components[0]);this.selectedFeature.geometry.addComponent(c.components[0]);this.selectedFeature.modified=true;this.selectedFeature.geometry.calculateBounds();this.mapPanel.map.controls.forEach(function(e){if(e.CLASS_NAME=="OpenLayers.Control.ModifyFeature"&&e.active){e.resetVertices()}});this.layer.drawFeature(this.selectedFeature);this.layer.events.triggerEvent("featuremodified",{feature:this.selectedFeature})}},updateHelpImage:function(b){var a="figur-"+b+"-help.png";
this.down("#objectimage").show();this.down("#objectimage").update('<img src="'+OpenEMap.basePathImages+a+'"></img>')}});Ext.define("OpenEMap.action.DrawObject",{extend:OpenEMap.action.Action,constructor:function(d){this.mapPanel=d.mapPanel;this.layer=this.mapPanel.drawLayer;this.style=d.style;this.attributes=d.attributes;this.objectConfig=d.objectConfig;this.objectConfigView=d.objectConfigView;this.factory=Ext.create("OpenEMap.ObjectFactory");this.attributes=this.attributes||{};var c=OpenLayers.Class(OpenLayers.Control,{initialize:function(b){OpenLayers.Control.prototype.initialize.apply(this,arguments);
this.handler=new OpenLayers.Handler.Click(this,{click:this.onClick},this.handlerOptions)},onClick:Ext.bind(this.onClick,this)});d.control=new c({type:OpenLayers.Control.TYPE_TOGGLE});d.iconCls=d.iconCls||"action-drawobject";d.tooltip=d.tooltip||"Rita f\x26ouml;rdefinierad form.";d.toggleGroup="extraTools";this.callParent(arguments)},onClick:function(d){d=this.mapPanel.map.getLonLatFromPixel(d.xy);var c=this.objectConfigView?this.objectConfigView.config:OpenEMap.view.ObjectConfig.config,c=Ext.clone(c);
c.x=d.lon;c.y=d.lat;d=this.factory.create(c,this.attributes,this.style);this.mapPanel.unselectAll();this.layer.addFeatures([d]);this.mapPanel.selectControl.select(d)},toggle:function(b){b&&this.objectConfigView.setConfig(this.objectConfig)}});Ext.define("OpenEMap.action.FullExtent",{extend:OpenEMap.action.Action,constructor:function(a){a.control=new OpenLayers.Control.ZoomToMaxExtent();a.iconCls=a.iconCls||"action-fullextent";a.tooltip=a.tooltip||"Zooma till full utberedning";this.callParent(arguments)
}});Ext.define("OpenEMap.view.IdentifyResults",{extend:Ext.panel.Panel,autoScroll:true,layout:{type:"vbox",pack:"start",align:"stretch",resizable:true},initComponent:function(){var a=Ext.create("Ext.data.TreeStore",{root:{expanded:true}});this.root=a.getRootNode();var b=Ext.create("Ext.grid.property.Grid",{flex:2,autoScroll:true,title:"Egenskaper",collapsible:true,collapsed:false,xtype:"propertygrid",stripeRows:true,clicksToEdit:100});this.items=[{xtype:"treepanel",flex:1,rootVisible:false,store:a,minHeight:200,listeners:{select:this.onSelect,scope:this}},b];
this.callParent(arguments)},onSelect:function(c,a,b){var g={};var e=a.raw.feature;var d=a.raw.layer;var f=function(j){if(d.metadata.attributes[j]){var i=d.metadata.attributes[j].alias||j;g[i]=e.attributes[j]}};if(e){if(d.metadata&&d.metadata.attributes){Object.keys(e.attributes).forEach(f)}else{g=e.attributes}this.mapPanel.searchLayer.selectedFeatures.forEach(function(i){this.mapPanel.selectControl.unselect(i)},this);if(a.raw.feature.layer){this.mapPanel.selectControl.select(e)}}g=Ext.clone(g);var h=Ext.clone(g);
Object.keys(g).forEach(function(i){var j=h[i];j=j?j:"";if(j.match("http://")||j.match("//")||j.match("https://")){g[i]='<a href="'+j+'" target="_blank">Länk</a>';h[i]={renderer:function(k){return k},editor:Ext.create("Ext.form.DisplayField")}}else{h[i]={editor:Ext.create("Ext.form.DisplayField")}}});this.down("propertygrid").setSource(g,h)},addResult:function(c,b){var d=this.root.appendChild({text:b.name,leaf:false,expanded:true});var a=function(e){d.appendChild({text:e.attributes[Object.keys(e.attributes)[0]],leaf:true,feature:e,layer:b})
};c.forEach(a)}});Ext.define("OpenEMap.action.Identify",{extend:OpenEMap.action.Action,popup:null,getPopup:function(a){if(this.popup){this.popup.destroy()}this.popup=Ext.create("GeoExt.window.Popup",{title:"Sökresultat",location:a.feature,anchored:false,unpinnable:false,draggable:true,map:a.mapPanel,maximizable:false,minimizable:false,resizable:true,width:300,height:400,layout:"fit",items:a.items,collapsible:false,x:200,y:100,listeners:{close:function(){a.mapPanel.searchLayer.removeAllFeatures()}}});
return this.popup},constructor:function(d){var c=this;var h=d.mapPanel;var e=h.searchLayer;var g=d.map;var f=d.layers;var b=d.client;if(d.useRegisterenhet===null){d.useRegisterenhet=true}d.tolerance=d.tolerance||3;if(d.onlyVisibleLayers===null){d.onlyVisibleLayers=true}var a=OpenLayers.Class(OpenLayers.Control,{initialize:function(i){OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Click(this,{click:this.onClick},this.handlerOptions)},onClick:function(A){h.setLoading(true);
e.destroyFeatures();var s=g.getLonLatFromPixel(A.xy);var u=s.lon;var t=s.lat;var r={};var D={};D.x=A.xy.x+d.tolerance;r.x=A.xy.x-d.tolerance;D.y=A.xy.y+d.tolerance;r.y=A.xy.y-d.tolerance;var k=g.getLonLatFromPixel(r);var l=g.getLonLatFromPixel(D);var B=new OpenLayers.Geometry.Point(u,t);var p=new OpenLayers.Bounds();p.extend(k);p.extend(l);var o=new OpenLayers.Feature.Vector(B);e.addFeatures([o]);var w=Ext.create("OpenEMap.view.IdentifyResults",{mapPanel:h});var j=c.getPopup({mapPanel:h,location:o,items:w});
j.show();if(d.useRegisterenhet){OpenEMap.requestLM({url:"registerenheter?x="+u+"&y="+t,success:function(y){var x=Ext.decode(y.responseText);var E=new OpenLayers.Feature.Vector(B,{name:x.name});w.addResult([E],{name:"Fastigheter"})},failure:function(x){Ext.Msg.alert("Fel i fastighetstjänsten","Kontakta systemadministratör<br>Felkod: "+x.status+" "+x.statusText)}})}var m=Ext.create("OpenEMap.config.Parser");var q=b.getConfig(true).layers;q=m.extractPlainLayers(q);var n=m.extractClickableLayers(q);if(d.onlyVisibleLayers){n=m.extractVisibleLayers(n)
}OpenLayers.ProxyHost=OpenEMap.basePathProxy;var z=m.extractWFS(n);var v=function(E){E.wfs.url=E.wfs.url;var x=Ext.apply({version:"1.1.0",srsName:g.projection},E.wfs);var y=new OpenLayers.Protocol.WFS(x);y.read({filter:new OpenLayers.Filter({type:OpenLayers.Filter.Spatial.BBOX,value:p}),callback:function(F){var G=F.features;if(G&&G.length>0){w.addResult(G,E);e.addFeatures(G)}}})};z.forEach(v);var i=m.extractWMS(m.extractNoWFS(n));var C=function(F){var E=function(G){var H=G.features;if(H&&H.length>0){w.addResult(H,F);
e.addFeatures(H)}};var y={url:F.layer.url,layers:[F.layer],infoFormat:"application/vnd.ogc.gml",clickCallback:E};var x=new OpenLayers.Control.WMSGetFeatureInfo(y);x.setMap(g);x.events.register("getfeatureinfo",x,E);x.getInfoForClick(A,{proxy:OpenEMap.basePathProxy})};i.forEach(C);h.setLoading(false)}});d.control=new a({type:OpenLayers.Control.TYPE_TOGGLE});d.iconCls=d.iconCls||"action-identify";d.tooltip=d.tooltip||"Identifiera";d.toggleGroup="extraTools";this.callParent(arguments)}});Ext.define("OpenEMap.action.MeasureArea",{extend:OpenEMap.action.Action,constructor:function(a){var b=a.mapPanel;
if(a.accuracy===null){a.accuracy=2}a.control=new OpenLayers.Control.DynamicMeasure(OpenLayers.Handler.Polygon,{mapPanel:b,accuracy:a.accuracy});a.iconCls=a.iconCls||"action-measurearea";a.tooltip=a.tooltip||"M&auml;t area";a.toggleGroup="extraTools";this.callParent(arguments)}});Ext.define("OpenEMap.action.MeasureLine",{extend:OpenEMap.action.Action,constructor:function(a){var b=a.mapPanel;if(a.accuracy===null){a.accuracy=2}a.control=new OpenLayers.Control.DynamicMeasure(OpenLayers.Handler.Path,{maxSegments:null,accuracy:a.accuracy,mapPanel:b});
a.iconCls=a.iconCls||"action-measureline";a.tooltip=a.tooltip||"Mät str&auml;cka";a.toggleGroup="extraTools";this.callParent(arguments)}});Ext.define("OpenEMap.action.MetadataInfoColumn",{extend:Ext.grid.column.Action,requrires:["Ext.tip.ToolTip","OpenEMap.data.DataHandler","OpenEMap.view.MetadataWindow"],text:"",width:22,menuDisabled:true,align:"center",iconCls:"action-identify",initComponent:function(a){var b=this;this.tip=Ext.create("Ext.tip.ToolTip",{trackMouse:true});this.listeners={mouseover:function(f,i,d,e,g,c,h){b.tip.setTarget(g.target);
if(b.dataHandler){b.dataHandler.getMetadataAbstract(b.getUUIDFromMetadataUrl(c.get("urlToMetadata")),function(j){if(j["abstract"]){b.updateTooltip(j["abstract"])}})}},mouseout:function(){b.tip.update(null);b.tip.hide()},click:function(f,e,h,d,g,c){if(b.metadataWindow){b.tip.update(null);b.metadataWindow.showMetadata(b.getUUIDFromMetadataUrl(c.get("urlToMetadata")))}}};this.callParent(arguments)},updateTooltip:function(a){if(a){this.tip.update(a.substr(0,180)+"...");this.tip.show()}},getUUIDFromMetadataUrl:function(a){if(a){var b=a.indexOf("id=");
if(b>0){return a.substr(b+3,36)}}return a}});Ext.define("OpenEMap.action.ModifyGeometry",{extend:OpenEMap.action.Action,constructor:function(b){var e=b.mapPanel;var c=e.drawLayer;if(b.drag===undefined){b.drag=true}if(b.rotate===undefined){b.rotate=true}if(b.reshape===undefined){b.reshape=true}var d=0;if(b.drag){d=d|OpenLayers.Control.ModifyFeature.DRAG}if(b.rotate){d=d|OpenLayers.Control.ModifyFeature.ROTATE}if(b.resize){d=d|OpenLayers.Control.ModifyFeature.RESIZE}if(b.reshape){d=d|OpenLayers.Control.ModifyFeature.RESHAPE
}var a=Ext.apply({mode:d},b.options);b.control=new OpenLayers.Control.ModifyFeature(c,a);b.control._mode=b.control.mode;b.iconCls=b.iconCls||"action-modifygeometry";b.tooltip=b.tooltip||"&Auml;ndra ritat objekt";b.toggleGroup="extraTools";this.callParent(arguments)}});Ext.define("OpenEMap.action.ModifyText",{extend:OpenEMap.action.Action,constructor:function(a){var c=a.mapPanel;var b=a.mapPanel.drawLayer;a.attributes=a.attributes||{};a.control=a.mapPanel.selectControl;a.control.events.register("deactivate",this,function(){console.log("deactivate")
});a.control.events.register("activate",this,function(){var d=this;b.events.register("featureselected",d,function(e){Ext.Msg.prompt("Text","Mata in text:",function(f,g){if(f=="ok"){e.feature.attributes.label=g;e.feature.data.label=g;b.redraw()}})})});a.control.events.register("deactivate",this,function(){b.events.unregister("featureselected")});a.iconCls=a.iconCls||"action-selectgeometry";a.tooltip=a.tooltip||"&Auml;ndra text";a.toggleGroup="extraTools";this.callParent(arguments)}});Ext.define("OpenEMap.action.Permalink",{extend:OpenEMap.action.Action,constructor:function(a){this.client=a.client;
a.control=a.control=new OpenLayers.Control.Button({trigger:this.onClick.bind(this)});a.iconCls=a.iconCls||"action-permalink";a.tooltip=a.tooltip||"Skapa länk till kartan";this.callParent(arguments)},onClick:function(){this.generate()},generate:function(){var a=function(b){var c=Ext.decode(b.responseText);this.createWindow(c)};Ext.Ajax.request({url:OpenEMap.wsUrls.permalinks,method:"POST",jsonData:this.client.getPermalinkdata(),success:a.bind(this)})},createWindow:function(c){var b=document.location.protocol+"//"+document.location.host+document.location.pathname+"?permalink="+c;
var a='<a href="'+b+'" target="_blank">'+b+"</a>";if(this.w){if(this.w.isHidden()){this.w.show()}this.w.items.getAt(0).getComponent("permalink").update(a);return}this.w=Ext.create("Ext.Window",{title:"Permalink",layout:"fit",xtype:"form",width:400,bodyPadding:5,bodyStyle:{border:"0px"},plain:true,border:false,closeAction:"hide",items:{layout:"anchor",border:false,items:{xtype:"label",name:"permalink",itemId:"permalink",readOnly:true,border:false,anchor:"100%",html:a}},bbar:["->",{text:"Uppdatera",handler:this.onClick.bind(this)}]});
this.w.show()}});Ext.define("OpenEMap.view.PopupResults",{extend:GeoExt.window.Popup,autoScroll:true,layout:{type:"vbox",pack:"start",align:"stretch"},popup:null,constructor:function(a){if(this.popup){this.popup.destroy()}this.popup=Ext.create("GeoExt.window.Popup",{ancCls:"oep-popup-anc",popupCls:"oep-popup",bodyCls:"oep-popup-body",anchored:true,anchorPosition:"bottom-left",animCollapse:true,collapsible:false,draggable:false,feature:a.feature,html:a.popupText,icon:a.icon,layout:"fit",location:a.location,map:a.mapPanel,maxWidth:300,maximizable:false,minimizable:false,resizable:false,title:a.title,unpinnable:false,listeners:{beforeclose:function(){if(this){this.destroy()
}this.feature.renderIntent="default";this.feature.layer.drawFeature(this.feature);map.events.triggerEvent("popupfeatureunselected",{layer:this.feature.layer,featureid:this.feature.attributes[this.feature.layer.idAttribute]})}}});return this.popup}});Ext.define("OpenEMap.action.Popup",{extend:OpenEMap.action.Action,popup:null,map:null,constructor:function(c){var b=this;map=c.map;var e=c.mapPanel;var d=c.layers;c.popup=null;c.tolerance=c.tolerance||3;if(c.showOnlyFirstHit===undefined||c.showOnlyFirstHit===null){c.showOnlyFirstHit=true
}var a=OpenLayers.Class(OpenLayers.Control,{initialize:function(f){OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Click(this,{click:this.onClick},this.handlerOptions)},onClick:function(s){var m=map.getLonLatFromPixel(s.xy);d=map.layers;var r=m.lon;var q=m.lat;var i=new OpenLayers.Geometry.Point(r,q);var t=new OpenLayers.Feature.Vector(i);var n={};var l={};l.x=s.xy.x+c.tolerance;n.x=s.xy.x-c.tolerance;l.y=s.xy.y+c.tolerance;n.y=s.xy.y-c.tolerance;
var u=map.getLonLatFromPixel(n);var k=map.getLonLatFromPixel(l);var f=new OpenLayers.Bounds();f.extend(u);f.extend(k);var g=Ext.create("OpenEMap.config.Parser");var h=g.extractPopupLayers(d);var p=false;var j=function(w){if(w.popup){w.popup.forEach(function(z){z.destroy();z=null});w.popup=[]}var y=function(C){if(C.geometry.intersects(f.toGeometry())){var B=w.popupTextPrefix+C.attributes[w.popupTextAttribute]+w.popupTextSuffix;var A="";if(w.popupTitleAttribute){A=C.attributes[w.popupTitleAttribute]
}if(C.geometry.getVertices().length==1){t=C.clone()}var z=new OpenEMap.view.PopupResults({mapPanel:e,location:t,popupText:B,feature:C,title:A});z.show();w.popup.push(z);C.renderIntent="select";C.layer.drawFeature(C);map.events.triggerEvent("popupfeatureselected",{layer:w,featureid:C.attributes[w.idAttribute]});return true}else{if(C.renderIntent=="select"){C.renderIntent="default";C.layer.drawFeature(C);map.events.triggerEvent("popupfeatureunselected",{layer:w,featureid:C.attributes[w.idAttribute]})
}return false}};var x=0;var v=false;while((x<w.features.length)&&(!(v&&c.showOnlyFirstHit))){v=y(w.features[x]);x++}return p};var o=0;while((o<h.length)&&(!(p&&c.showOnlyFirstHit))){p=j(h[o]);o++}}});c.control=new a({type:OpenLayers.Control.TYPE_TOGGLE});c.iconCls=c.iconCls||"action-popup";c.tooltip=c.tooltip||"Popup";c.toggleGroup="extraTools";this.callParent(arguments)},destroy:function(){if(this.popup){this.popup.destroy()}this.destroyPopupLayers()}});Ext.define("OpenEMap.action.Print",{extend:OpenEMap.action.Action,require:"GeoExt.plugins.PrintExtent",constructor:function(d){var e=d.mapPanel;
var c=e.plugins[0];var k=c.printProvider;k.customParams={attribution:d.mapPanel.config.attribution.trim(),mapTitle:""};var j=null;var g=null;var i=function(){var n=j.down("#scale");n.select(g.scale)};var l=function(){if(j){j.setLoading(false)}};var a=function(o,n){if(j){j.setLoading(false)}Ext.Msg.show({title:"Felmeddelande",msg:"Print failed.\n\n"+n.responseText,icon:Ext.Msg.ERROR})};var m=function(){k.un("beforedownload",l);k.on("printexception",a);c.control.events.unregister("transformcomplete",null,i);
c.removePage(g);c.hide();j=null};var h=function(){m();f.deactivate()};d.iconCls=d.iconCls||"action-print";d.tooltip=d.tooltip||"Skriv ut";d.toggleGroup="extraTools";var b=OpenLayers.Class(OpenLayers.Control,{initialize:function(n){OpenLayers.Control.prototype.initialize.apply(this,arguments)},type:OpenLayers.Control.TYPE_TOGGLE,activate:function(){if(j){return}c.hide();c.show();g=c.addPage();k.dpis.data.items.forEach(function(s){var r=false;if(s.data.name==="56"){r=true;s.data.name="Låg ("+s.data.name+" dpi)"
}else{if(s.data.name==="127"){r=true;s.data.name="Medel ("+s.data.name+" dpi)"}else{if(s.data.name==="254"){r=true;s.data.name="Hög ("+s.data.name+" dpi)"}}}});k.layouts.data.items.forEach(function(r){if(/landscape$/.test(r.data.name)){r.data.displayName=r.data.name.replace("landscape","liggande")}else{if(/portrait$/.test(r.data.name)){r.data.displayName=r.data.name.replace("portrait","stående")}}});j=new Ext.Window({autoHeight:true,width:290,resizable:false,layout:"fit",bodyPadding:"5 5 0",title:"Utskriftsinst&auml;llningar",listeners:{close:h},items:[{xtype:"form",layout:"anchor",defaults:{anchor:"100%"},fieldDefaults:{labelWidth:120},items:[{xtype:"textfield",fieldLabel:"Rubrik",valueField:"mapTitle",itemId:"mapTitle",queryMode:"local",value:k.customParams.mapTitle,listeners:{change:function(r){k.customParams.mapTitle=r.value
}}},{xtype:"combo",fieldLabel:"Pappersformat",store:k.layouts,displayField:"displayName",valueField:"name",itemId:"printLayouts",queryMode:"local",value:k.layouts.getAt(0).get("name"),listeners:{select:function(u,s,t){var r=s[0];k.setLayout(r)}}},{xtype:"combo",fieldLabel:"Kvalité",store:k.dpis,displayField:"name",valueField:"value",queryMode:"local",value:k.dpis.first().get("value"),listeners:{select:function(u,s,t){var r=s[0];k.setDpi(r)}}},{xtype:"combo",fieldLabel:"Skala",store:k.scales,displayField:"name",valueField:"value",queryMode:"local",itemId:"scale",value:k.scales.first().get("value"),listeners:{select:function(u,s,t){var r=s[0];
g.setScale(r,"m")}}}]}],bbar:["->",{text:"Skriv ut",handler:function(){j.setLoading(true);c.print()}}]});j.show();var q=j.down("#scale");q.select(g.scale);var n=6;var o=j.down("#printLayouts");o.select(o.store.data.get(n));var p=o.store.data.items[n];k.setLayout(p);c.control.events.register("transformcomplete",null,i);c.control.events.register("transformcomplete",null,i);k.on("beforedownload",l);k.on("printexception",a);OpenLayers.Control.prototype.activate.apply(this,arguments)},deactivate:function(){if(j){j.close()
}OpenLayers.Control.prototype.deactivate.apply(this,arguments)}});var f=new b({type:OpenLayers.Control.TYPE_TOGGLE});d.control=f;this.callParent(arguments)}});Ext.define("OpenEMap.action.SelectGeometry",{extend:OpenEMap.action.Action,constructor:function(a){var b=a.mapPanel;a.control=b.selectControl;a.iconCls=a.iconCls||"action-selectgeometry";a.tooltip=a.tooltip||"V&auml;lj ritat objekt";a.toggleGroup="extraTools";this.callParent(arguments)}});Ext.define("OpenEMap.view.BaseLayers",{extend:Ext.toolbar.Toolbar,border:false,cls:"oep-map-tools",constructor:function(b){var e=b.mapPanel;
var c=e.map;var d=e.map.layers.filter(function(f){return f.isBaseLayer});var a=function(h){var f;if(h==d[d.length-1]){f="oep-tools-last"}var g=Ext.create("Ext.Button",{text:h.name,toggleGroup:"baseLayers",allowDepress:false,layer:h,pressed:h.visibility,cls:f,listeners:{toggle:function(i,k,j){if(k){c.setBaseLayer(h)}}}});return g};this.items=d.map(a);c.events.register("changebaselayer",this,this.onChangeBaseLayer);this.callParent(arguments)},onChangeBaseLayer:function(a){this.items.each(function(b){b.toggle(b.layer==a.layer,true)
})}});Ext.define("OpenEMap.view.Map",{extend:GeoExt.panel.Map,require:"GeoExt.plugins.PrintExtent",border:false,anchor:"100% 100%",constructor:function(b){this.initDefaultLayers(b.config);var c=Ext.create("GeoExt.data.MapfishPrintProvider",{url:OpenEMap.basePathMapFish,autoLoad:true,timeout:60*1000,listeners:{encodelayer:function(f,e,d){if(d&&d.baseURL){d.baseURL=d.baseURL.replace("gwc/service/","")}}}});var a=Ext.create("GeoExt.plugins.PrintExtent",{printProvider:c});this.encode=function(f){var g=a.addPage();
if(f){var d=c.layouts.findRecord("name",f);c.setLayout(d)}var e=c.encode(a.map,a.pages);a.removePage(g);return e};c.encode=function(e,f,o){if(e instanceof GeoExt.MapPanel){e=e.map}f=f instanceof Array?f:[f];o=o||{};if(this.fireEvent("beforeprint",this,e,f,o)===false){return}var j=Ext.apply({units:e.getUnits(),srs:e.baseLayer.projection.getCode(),layout:this.layout.get("name"),dpi:this.dpi.get("value")},this.customParams);var n=f[0].feature.layer;var m=[];var h=e.layers.concat();Ext.Array.remove(h,e.baseLayer);
Ext.Array.insert(h,0,[e.baseLayer]);Ext.each(h,function(q){if(q!==n&&q.getVisibility()===true){var p=this.encodeLayer(q);p&&m.push(p)}},this);j.layers=m;var i=[];Ext.each(f,function(p){i.push(Ext.apply({center:[p.center.lon,p.center.lat],scale:p.scale.get("value"),rotation:p.rotation},p.customParams))},this);j.pages=i;if(o.overview){var l=[];Ext.each(o.overview.layers,function(q){var p=this.encodeLayer(q);p&&l.push(p)},this);j.overviewLayers=l}if(o.legend&&this.fireEvent("beforeencodelegend",this,j,o.legend)){var k=o.legend;
var g=k.rendered;if(!g){k=k.cloneConfig({renderTo:document.body,hidden:true})}var d=[];k.items&&k.items.each(function(p){if(!p.hidden){var q=this.encoders.legends[p.getXType()];d=d.concat(q.call(this,p,j.pages[0].scale))}},this);if(!g){k.destroy()}j.legends=d}return j};b.plugins=[a];this.callParent(arguments);this.layers.add(this.searchLayer);this.layers.add(this.drawLayer);this.layers.add(this.measureLayer);this.layers.add(this.measureLayerArea);this.layers.add(this.measureLayerLength);this.layers.add(this.measureLayerSegments);
this.map.setLayerIndex(this.measureLayer,98);this.map.setLayerIndex(this.measureLayerArea,98);this.map.setLayerIndex(this.measureLayerLength,98);this.map.setLayerIndex(this.measureLayerSegments,98);this.selectControl=new OpenLayers.Control.SelectFeature(this.drawLayer);this.selectControl.handlers.feature.stopDown=false;this.map.addControl(this.selectControl);this.map.popup=[]},unselectAll:function(){this.drawLayer.selectedFeatures.forEach(function(a){this.selectControl.unselect(a)},this)},parseStyle:function(b){var g={Point:{pointRadius:4,graphicName:"square",fillColor:"#e8ffee",fillOpacity:0.9,strokeWidth:1,strokeOpacity:1,strokeColor:"#29bf4c"},Line:{strokeWidth:3,strokeColor:"#29bf4c",strokeOpacity:1},Polygon:{strokeWidth:3,strokeOpacity:1,strokeColor:"#29bf4c",fillColor:"#e8ffee",fillOpacity:0.9}};
var c=function(j){var k=Ext.clone(g);if(j.Point){Ext.apply(k.Point,j.Point);Ext.apply(k.Line,j.Line);Ext.apply(k.Polygon,j.Polygon);if(j.labelSegments){Ext.apply(k.labelSegments,j.labelSegments)}if(j.labelLength){Ext.apply(k.labelLength,j.labelLength)}}else{Ext.apply(k.Point,j);Ext.apply(k.Line,j);Ext.apply(k.Polygon,j)}return k};var h=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:g})]});var e;var i;var d;if(b){if(b["default"]){h=c(b["default"]);h=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:h})]})
}if(b.select){e=c(b.select);e=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:e})]})}if(b.temporary){i=c(b.temporary);i=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:i})]})}if(b.labelLength){d=c(b);d=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:d})]})}if(!b["default"]){h=c(b);h=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:h})]})}}var a={"default":h};if(e){a.select=e}if(i){a.temporary=i}if(d){a["default"]=d}var f=new OpenLayers.StyleMap(a);
return f},initDefaultLayers:function(d){if(!d.drawStyle){d.drawStyle={"default":{Point:{pointRadius:4,graphicName:"square",fillColor:"#ffffff",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#2969bf"},Line:{strokeWidth:3,strokeColor:"#2969bf",strokeOpacity:1},Polygon:{strokeWidth:3,strokeOpacity:1,strokeColor:"#2969bf",fillOpacity:0.3,fillColor:"#deecff"}},select:{strokeWidth:3,strokeOpacity:1,fillColor:"#deecff",fillOpacity:0.75,strokeColor:"#2969bf"},temporary:{strokeWidth:3,strokeOpacity:0.75,fillColor:"#ff00ff",fillOpacity:0,strokeColor:"#ff00ff"}}
}this.drawLayer=new OpenLayers.Layer.Vector("Drawings",{displayInLayerSwitcher:false,styleMap:this.parseStyle(d.drawStyle||this.drawLayerDefaultStyle)});var a=new OpenLayers.Rule({filter:new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:"type",value:"label"}),symbolizer:{pointRadius:20,fillOpacity:0,strokeOpacity:0,label:"${label}"}});this.drawLayer.styleMap.styles["default"].addRules([a]);if(d.autoClearDrawLayer){this.drawLayer.events.register("beforefeatureadded",this,function(){this.drawLayer.destroyFeatures()
})}function j(l){var k=l.feature;this.selectControl.select(k)}function h(l){var k=l.feature;this.selectControl.select(k)}function f(l){var k=l.feature}this.drawLayer.events.register("beforefeaturemodified",this,h);this.drawLayer.events.register("afterfeaturemodified",this,f);var e={Point:{externalGraphic:OpenEMap.basePathImages+"point_added.png",graphicWidth:15,graphicOpacity:1},Line:{strokeWidth:3,strokeColor:"#2969bf",strokeOpacity:1},Polygon:{strokeDashstyle:"dot",strokeWidth:3,strokeOpacity:1,strokeColor:"#f58d1e",fillOpacity:0}};
this.searchLayer=new OpenLayers.Layer.Vector("Searchresult",{displayInLayerSwitcher:false,styleMap:this.parseStyle(e)});var c=OpenLayers.Control.DynamicMeasure.styles;var b=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:{Point:c.Point,Line:c.Line,Polygon:c.Polygon}})]});var g=new OpenLayers.StyleMap({"default":b});var i=function(k){return new OpenLayers.StyleMap({"default":OpenLayers.Util.applyDefaults(null,c[k])})};this.measureLayer=new OpenLayers.Layer.Vector("MeasureLayer",{displayInLayerSwitcher:false,styleMap:g});
this.measureLayerArea=new OpenLayers.Layer.Vector("MeasureLayerArea",{displayInLayerSwitcher:false,styleMap:i("labelArea")});this.measureLayerSegments=new OpenLayers.Layer.Vector("MeasureLayerSegments",{displayInLayerSwitcher:false,styleMap:i("labelSegments")});this.measureLayerLength=new OpenLayers.Layer.Vector("MeasureLayerLength",{displayInLayerSwitcher:false,styleMap:i("labelLength")})},setInitialExtent:function(){var a=this.map;if(!a.getCenter()){if(this.center||this.zoom){a.setCenter(this.center,this.zoom)
}else{if(this.extent instanceof OpenLayers.Bounds){a.zoomToExtent(this.extent,false)}else{a.zoomToMaxExtent()}}}}});Ext.define("OpenEMap.view.SearchCoordinate",{extend:Ext.container.Container,layout:"column",defaults:{labelWidth:20},width:300,border:false,zoom:5,initComponent:function(a){this.items=[{itemId:"e",fieldLabel:"E",xtype:"textfield",columnWidth:0.5},{itemId:"n",fieldLabel:"N",xtype:"textfield",columnWidth:0.5},{xtype:"button",text:"Sök",handler:function(){var b=this.down("#e").getValue();
var c=this.down("#n").getValue();this.mapPanel.map.setCenter([b,c],this.zoom);this.fireEvent("searchcomplete",[b,c])},scope:this}];this.addEvents(["searchcomplete"]);this.callParent(arguments)}});Ext.define("OpenEMap.form.SearchRegisterenhet",{extend:Ext.form.field.ComboBox,alias:"widget.searchregisterenhet",require:["Ext.data.*","Ext.form.*"],queryDelay:800,initComponent:function(){var d;var c;if(this.search&&this.search.options){d=this.search.options.municipalities.join(",");c=this.search.options.zoom
}var b=this.mapPanel.searchLayer;function a(e){this.mapPanel.setLoading(true);this.mapPanel.searchLayer.destroyFeatures();OpenEMap.requestLM({url:"registerenheter/"+e+"/enhetsomraden?",success:function(f){this.resultPanel.expand();var h=new OpenLayers.Format.GeoJSON().read(f.responseText);b.addFeatures(h);var g=b.getDataExtent();if(c){this.mapPanel.map.setCenter(g.getCenterLonLat(),c)}else{this.mapPanel.map.zoomToExtent(g)}},failure:function(){Ext.Msg.alert("Fel","Ingen träff.")},callback:function(){this.mapPanel.setLoading(false)
},scope:this})}this.store=Ext.create("Ext.data.Store",{proxy:{type:"ajax",url:OpenEMap.basePathLM+"registerenheter",extraParams:{lmuser:OpenEMap.lmUser},reader:{type:"json",root:"features"}},fields:[{name:"id",mapping:"properties.objid"},{name:"name",mapping:"properties.name"}]});this.store.on("beforeload",function(f,e){f.lastOperation=e},this);this.labelWidth=60;this.displayField="name";this.valueField="id";this.queryParam="q";this.typeAhead=true;this.forceSelection=true;this.listeners={select:function(f,e){var g=e[0].get("id");
a.call(this,g)},beforequery:function(f){if(d&&f.query.match(d)===null){f.query=d+" "+f.query}var e=this.store.lastOperation&&this.store.lastOperation.request&&this.store.lastOperation.request.params&&this.store.lastOperation.request.params.q?this.store.lastOperation.request.params.q:undefined;if(this.store.loading&&this.store.lastOperation){var h=Ext.Ajax.requests;for(var g in h){if(h.hasOwnProperty(g)&&h[g].options==this.store.lastOperation.request){Ext.Ajax.abort(h[g])}}}},scope:this};this.callParent(arguments)
}});Ext.define("OpenEMap.form.SearchAddress",{extend:Ext.form.field.ComboBox,alias:"widget.searchaddress",require:["Ext.data.*","Ext.form.*"],initComponent:function(){var d;var c=11;if(this.search&&this.search.options){d=this.search.options.municipalities.join(",");c=this.search.options.zoom}var b=this.mapPanel.searchLayer;function a(f,e,g){this.mapPanel.setLoading(true);this.mapPanel.searchLayer.destroyFeatures();OpenEMap.requestLM({url:"registerenheter?fnr="+f,success:function(i){var j=Ext.decode(i.responseText);
if(j.success===false){Ext.Msg.alert("Meddelande","Ingen fastighet kunde hittas på adressen.");return}this.resultPanel.expand();var k=new OpenLayers.Format.GeoJSON().read(i.responseText,"FeatureCollection");b.addFeatures(k);var h=new OpenLayers.Geometry.Point(e,g);feature=new OpenLayers.Feature.Vector(h);b.addFeatures([feature]);this.mapPanel.map.setCenter([e,g],c)},failure:function(){Ext.Msg.alert("Fel","Okänt.")},callback:function(){this.mapPanel.setLoading(false)},scope:this})}this.store=Ext.create("Ext.data.Store",{proxy:{type:"ajax",url:OpenEMap.basePathLM+"addresses",extraParams:{lmuser:OpenEMap.lmUser},reader:{type:"array"}},fields:["id","name","x","y","fnr"]});
this.store.on("beforeload",function(f,e){f.lastOperation=e},this);this.labelWidth=60;this.displayField="name";this.valueField="id";this.queryParam="q";this.typeAhead=true;this.forceSelection=true;this.listeners={select:function(f,e){a.call(this,e[0].data.fnr,e[0].data.x,e[0].data.y)},beforequery:function(e){if(d&&e.query.match(d)===null){e.query=d+" "+e.query}if(this.store.loading&&this.store.lastOperation){var g=Ext.Ajax.requests;for(var f in g){if(g.hasOwnProperty(f)&&g[f].options==this.store.lastOperation.request){Ext.Ajax.abort(g[f])
}}}},scope:this};this.callParent(arguments)}});Ext.define("OpenEMap.form.SearchPlacename",{extend:Ext.form.field.ComboBox,alias:"widget.searchplacename",require:["Ext.data.*","Ext.form.*"],initComponent:function(){var b;var a=5;if(this.search&&this.search.options){b=this.search.options.municipalities.join(",");a=this.search.options.zoom}this.store=Ext.create("Ext.data.Store",{proxy:{type:"ajax",url:OpenEMap.basePathLM+"placenames",extraParams:{lmuser:OpenEMap.lmUser,kommunkod:b},reader:{type:"json",root:"features"}},fields:[{name:"id",mapping:"properties.id"},{name:"name",mapping:"properties.name"}]});
this.store.on("beforeload",function(d,c){d.lastOperation=c},this);this.labelWidth=60;this.displayField="name";this.valueField="id";this.queryParam="q";this.typeAhead=true;this.forceSelection=true;this.listeners={select:function(g,d){var c=d[0].raw;var f=c.geometry.coordinates;var e=[f[1],f[0]];this.mapPanel.map.setCenter(e,a)},beforequery:function(){if(this.store.loading&&this.store.lastOperation){var d=Ext.Ajax.requests;for(var c in d){if(d.hasOwnProperty(c)&&d[c].options==this.store.lastOperation.request){Ext.Ajax.abort(d[c])
}}}},scope:this};this.callParent(arguments)}});Ext.define("OpenEMap.form.SearchES",{extend:Ext.form.field.ComboBox,alias:"widget.searches",require:["Ext.data.*","Ext.form.*"],initComponent:function(){var b=this.mapPanel.map;var a=this.mapPanel.searchLayer;this.store=Ext.create("Ext.data.Store",{proxy:{type:"ajax",url:OpenEMap.basePathES+"_search",reader:{type:"json",root:"hits.hits",totalProperty:"hits.total",idProperty:"_id"}},fields:[{name:"type",mapping:"_type"},{name:"hit",mapping:"_source.properties.TEXT"},{name:"geometry",mapping:"_source.geometry"}]});
this.displayField="hit";this.valueField="id";this.queryParam="q";this.typeAhead=true;this.forceSelection=true;this.allowBlank=false;this.allowOnlyWhitespace=false;this.minChars=4;this.minLength=4;this.preventMark=true;this.hideTrigger=true;this.listeners={select:function(g,c){var d=c[0].data.geometry;var f=new OpenLayers.Format.GeoJSON({ignoreExtraDims:true});var h=f.read(d,"Geometry");var e=new OpenLayers.Feature.Vector(h);a.destroyFeatures();a.addFeatures([e]);b.zoomToExtent(e.geometry.getBounds())
},beforequery:function(c){c.query='"'+c.query+'"*'},scope:this};this.callParent(arguments)}});Ext.define("OpenEMap.view.SearchFastighet",{extend:Ext.form.Panel,border:false,initComponent:function(){if(!this.renderTo){this.title="Sök";this.bodyPadding=5}var g=[];if(this.search&&this.search.searchEstates){g.push(["searchregisterenhet","Fastighet"])}if(this.search&&this.search.searchAddresses){g.push(["searchaddress","Adress"])}if(this.search&&this.search.searchPlacenames){g.push(["searchplacename","Ort"])
}if(this.search&&this.search.searchES&&this.search.searchES.detaljplan){g.push(["searches","Detaljplaner"])}var e=[{text:"Namn",dataIndex:"name",flex:1}];var c=Ext.create("GeoExt.data.FeatureStore",{layer:this.mapPanel.searchLayer,featureFilter:new OpenLayers.Filter.Function({evaluate:function(i){if(i.attributes.name){return true}else{return false}}}),fields:[{name:"name"},{name:"fid"},{name:"objid"}]});var f=new OpenLayers.Control.SelectFeature(this.mapPanel.searchLayer);f.handlers.feature.stopDown=false;
this.mapPanel.map.addControl(f);var a=Ext.create("GeoExt.selection.FeatureModel",{selectControl:f});var d=Ext.create("Ext.grid.Panel",{columns:e,store:c,selModel:a});function h(i){var j=null;if(i==="searchregisterenhet"){j=this.search&&this.search.searchEstates?this.search.searchEstates:null}else{if(i==="searchaddress"){j=this.search&&this.search.searchAddresses?this.search.searchAddresses:null}else{j=this.search&&this.search.searchPlacenames?this.search.searchPlacenames:null}}return{xtype:i,mapPanel:this.mapPanel,basePath:this.basePath,search:j,resultPanel:d}
}function b(k,j){var i=this.down("#search");this.mapPanel.searchLayer.destroyFeatures();i.removeAll();i.add(h.call(this,j))}this.items=[{layout:"column",border:false,items:[{xtype:"combo",width:110,store:g,forceSelection:true,queryMode:"local",value:"searchregisterenhet",border:false,listeners:{change:b,scope:this}},{itemId:"search",columnWidth:1,layout:"fit",border:false,items:h.call(this,"searchregisterenhet")}]}];this.items.push(d);this.callParent(arguments)}});Ext.define("OpenEMap.view.Scalebar",{extend:Ext.panel.Panel,bodyStyle:"background : transparent",border:false,getTools:function(){},constructor:function(a){Ext.apply(this,a);
var b=null;var c=document.getElementById(this.renderTo);if(c){b=new OpenLayers.Control.ScaleLine({div:c})}else{b=new OpenLayers.Control.ScaleLine()}this.mapPanel.map.addControl(b);this.callParent(arguments)}});Ext.define("OpenEMap.view.ShowCoordinate",{extend:Ext.container.Container,defaults:{labelWidth:10},border:false,layout:"column",width:150,srs:"",constructor:function(a){this.items=[{itemId:"e",fieldLabel:"E",xtype:"textfield",columnWidth:0.5,baseCls:a.cls,baseBodyCls:a.cls,bodyCls:a.cls,fieldCls:a.cls,fieldBodyCls:a.cls,formItemCls:a.cls,inputRowCls:a.cls,labelCls:a.cls},{itemId:"n",fieldLabel:"N",xtype:"textfield",columnWidth:0.5,baseCls:a.cls,baseBodyCls:a.cls,bodyCls:a.cls,fieldCls:a.cls,fieldBodyCls:a.cls,formItemCls:a.cls,inputRowCls:a.cls,labelCls:a.cls}];
this.callParent(arguments)}});Ext.define("OpenEMap.view.ZoomTools",{extend:Ext.panel.Panel,bodyStyle:"background : transparent",border:false,getTools:function(){var d=Ext.util.CSS.getRule(".oep-tools");var e=d?"large":"large";var c=d?"5 0 5 0":"5 0 5 0";var b=[];var a=Ext.create("GeoExt.slider.Zoom",{height:160,vertical:true,aggressive:true,margin:c,map:this.mapPanel.map});b.push({xtype:"button",iconCls:"zoomtools-plus",mapPanel:this.mapPanel,scale:e,cls:"x-action-btn",listeners:{click:function(){this.mapPanel.map.zoomIn()
},scope:this}});b.push(a);b.push({xtype:"button",scale:e,cls:"x-action-btn",iconCls:"zoomtools-minus",mapPanel:this.mapPanel,listeners:{click:function(){this.mapPanel.map.zoomOut()},scope:this}});return b},constructor:function(a){Ext.apply(this,a);this.items=this.getTools();this.callParent(arguments)}});Ext.define("OpenEMap.model.GroupedLayerTreeModel",{extend:Ext.data.Model,fields:[{name:"text",type:"string"},{name:"checkedGroup",type:"string"},{name:"isGroupLayer"},{name:"layer"},{name:"queryable",type:"boolean"},{name:"clickable",type:"boolean"},{name:"isGroupLayer",type:"boolean"},{name:"expanded",type:"boolean"},{name:"layerId"},{name:"name",type:"string"},{name:"urlToMetadata"},{name:"wms"},{name:"wfs"},{name:"serverId"},{name:"metadata"},{name:"legendURL"},{name:"layers"}]});
Ext.define("OpenEMap.data.GroupedLayerTree",{extend:Ext.data.TreeStore,model:"OpenEMap.model.GroupedLayerTreeModel",defaultRootProperty:"layers",proxy:{type:"memory"},maxLayerIndex:1000,listeners:{beforeinsert:function(b,d,a,c){return this.onBeforeInsert(b,d,a)},beforeappend:function(a,c,b){return this.onBeforeAppend(a,c)},insert:function(b,d,a,c){this.onInsertAndAppend(d)},append:function(a,d,b,c){this.onInsertAndAppend(d)},remove:function(b,d,a,c){this.onRemove(b,d,a)}},constructor:function(a){a=Ext.apply({},a);
this.callParent([a])},getLayerConfiguration:function(b){var a=[];function d(i,h){var f={name:i.get("name"),isGroupLayer:i.get("isGroupLayer"),expanded:i.get("expanded"),queryable:i.get("queryable"),clickable:i.get("clickable"),wms:typeof i.get("wms")==="string"?{}:i.get("wms"),wfs:typeof i.get("wfs")==="string"?{}:i.get("wfs"),layer:h?i.get("layer"):undefined,metadata:typeof i.get("metadata")==="string"?{}:i.get("metadata"),layers:[]};if(!f.wms||Object.keys(f.wms).length===0){f.wms=undefined}if(!f.wfs||Object.keys(f.wfs).length===0){f.wfs=undefined
}for(var g=0;g<i.childNodes.length;g++){f.layers.push(d(i.childNodes[g],h))}return f}var e=this.getRootNode().childNodes;for(var c=0;c<e.length;c++){a.push(d(e[c],b))}return a},onBeforeAppend:function(b,a){return true},createInlineLegend:function(e){if(!e.raw.layer||e.get("hasInlineLegend")){return}var c=e.raw.layer;var b;if(c.legendURL!==undefined){b=c.legendURL}else{if(e.raw.wms&&e.raw.wms.params&&(e.raw.wms.params.LAYERS||e.raw.wms.params.layers)){var a=GeoExt.data.LayerModel.createFromLayer(c);
var d=Ext.create("GeoExt.container.WmsLegend",{layerRecord:a,useScaleParameter:false});b=d.getLegendUrl(e.raw.wms.params.LAYERS||e.raw.wms.params.layers)}}if(b&&b.length>0){e.set("text",'<div style="display:inline-block;width:20px;height:20px;margin-right:2px;overflow:hidden;"><img class="legendimg" src="'+b+'" style="height:20px;"></div>'+e.get("text"))}e.set("hasInlineLegend",true)},onBeforeInsert:function(b,c,a){return true},onInsertAndAppend:function(b){if(!this._inserting){this._inserting=true;
var a=b.getOwnerTree() instanceof OpenEMap.view.layer.Add;if(!a){if(b.raw.checked_){b.set("checked",b.raw.checked_)}b.cascadeBy(function(d){var e=d.get("layer");d.getLayer=function(){return this.get("layer")};if(e&&e!==""&&this.map){var c=this.map.getLayer(e);if(c===null&&e&&e.displayInLayerSwitcher===true){this.map.addLayer(e)}}},this);this.reorderLayersOnMap();this.createInlineLegend(b)}delete this._inserting}},onRemove:function(b,c,a){if(!this._removing&&!a){this._removing=true;c.cascadeBy(function(d){var e=d.get("layer");
if(e&&e.map){this.map.removeLayer(e)}},this);delete this._removing}},reorderLayersOnMap:function(){var b=this.getRootNode();if(b){var a=this.maxLayerIndex;b.cascadeBy(function(c){var d=c.get("layer");if(d){d.setZIndex(a);a--}},this)}},unbind:function(){var a=this;a.un("beforeinsert",a.onBeforeInsert,a);a.un("beforeappend",a.onBeforeAppend,a);a.un("insert",a.onInsertAndAppend,a);a.un("append",a.onInsertAndAppend,a);a.un("remove",a.onRemove,a);a.map=null},destroy:function(){}});Ext.define("OpenEMap.view.layer.Tree",{extend:Ext.tree.Panel,rootVisible:false,hideHeaders:true,initComponent:function(){if(!this.store&&this.mapPanel){this.store=Ext.create("OpenEMap.data.GroupedLayerTree",{root:{text:(this.mapPanel.config&&this.mapPanel.config.name?this.mapPanel.config.name:"Lager"),expanded:true,isGroupLayer:true,layers:this.mapPanel.map.layerSwitcherLayerTree},map:this.mapPanel.map})
}this.on("checkchange",function(c,b,a){c.cascadeBy(function(g){g.set("checked",b);var f=g.get("layer");if(f){f.setVisibility(b);f.options.visibility=b}var e=g.get("wms");if(e){e.options.visibility=b}});function d(g,f){var e=g.parentNode;if(e.get("checked")!=g.get("checked")){if(f){if(!e.isRoot()){e.set("checked",f);d(e,f)}}else{if(!e.isRoot()&&!e.childNodes.some(function(h){return h.get("checked")})){e.set("checked",f);d(e,f)}}}}d(c,b)});this.on("cellclick",function(l,f,k,d,b,j,i){var c=function(m){var e=Ext.create("Ext.Img",{src:m});
var n=Ext.create("Ext.tip.ToolTip",{title:"Legend "+d.raw.name,closable:true,items:e});n.showBy(b);e.getEl().on("load",function(){n.doLayout()})};var h=function(p){var n=p.raw.layer;var m;if(n.legendURL!==undefined){m=n.legendURL}else{if(p.raw.wms&&(p.raw.wms.params.LAYERS||p.raw.wms.params.layers)){var e=GeoExt.data.LayerModel.createFromLayer(n);var o=Ext.create("GeoExt.container.WmsLegend",{layerRecord:e,useScaleParameter:false});m=o.getLegendUrl(p.raw.wms.params.LAYERS||p.raw.wms.params.layers)
}}return m};var g=i.browserEvent.target||i.browserEvent.srcElement;if(Ext.get(g).hasCls("legendimg")&&d.raw.layer){var a=h(d);if(a&&a.length>0){c(a)}}});this.callParent(arguments)},getBaseLayersConfiguration:function(){var a=[];function c(f){var e={name:f.name,wms:{url:f.url,options:f.options,params:f.params},visibility:f.visibility};e.wms.options.visibility=f.visibility;return e}var d=this.mapPanel.map.layers.filter(function(e){return e.isBaseLayer});for(var b=0;b<d.length;b++){a.unshift(c(d[b]))
}return a},getConfig:function(b){var a=Ext.clone(this.client.initialConfig);var c=this.getStore().getLayerConfiguration(b);var d=a.layers.filter(function(e){return(e.wms&&e.wms.options&&e.wms.options.isBaseLayer)?e:false});d=this.getBaseLayersConfiguration();a.layers=d.concat(c);return a}});Ext.define("OpenEMap.data.DataHandler",{metadataAbstractWsUrl:null,metadataWsUrl:null,layersWsUrl:null,metadataAbstractCache:{},constructor:function(a){this.wsUrls=OpenEMap.wsUrls;Ext.apply(this,a)},getLayer:function(b,a){},getLayers:function(a){},getMetadata:function(b,a){if(b&&this.wsUrls.metadata){this.doRequest({url:this.wsUrls.basePath+this.wsUrls.metadata+"/"+b},a)
}},getMetadataAbstract:function(c,b){if(c&&this.wsUrls.metadata_abstract){var a=this;if(a.metadataAbstractCache[c]){b(a.metadataAbstractCache[c])}else{this.doRequest({url:this.wsUrls.basePath+this.wsUrls.metadata_abstract+"/"+c},function(d){b(d);a.metadataAbstractCache[c]=d})}}},updateConfiguration:function(c,a,b){this.doRequest({url:this.wsUrls.basePath+this.wsUrls.adminconfigs+"/config/"+c,method:"PUT",jsonData:a},b)},saveNewConfiguration:function(a,b){this.doRequest({url:this.wsUrls.basePath+this.wsUrls.adminconfigs+"/config/",method:"POST",jsonData:a},b)
},deleteConfiguration:function(c,a,b){this.doRequest({url:this.wsUrls.basePath+this.wsUrls.adminconfigs+"/config/"+c,method:"DELETE",jsonData:a},b)},doRequest:function(a,c){var b=this;if(a&&(a.method&&a.method==="POST"&&a.method==="PUT")&&!c){b.onFailure("no callback function");return false}Ext.Ajax.request(Ext.apply({success:function(d){if(d&&d.responseText){var e=Ext.decode(d.responseText);if(c){c(e)}}else{b.onFailure()}},failure:function(d){b.onFailure(d.status+" "+d.statusText+", "+a.url)}},(a?a:{})))
},onFailure:function(a){console.error(a)}});Ext.define("OpenEMap.view.layer.TreeFilter",{extend:Ext.AbstractPlugin,alias:"plugin.treefilter",collapseOnClear:true,allowParentFolders:false,init:function(a){var b=this;b.tree=a;a.filter=Ext.Function.bind(b.filter,b);a.clearFilter=Ext.Function.bind(b.clearFilter,b)},filter:function(e,f,g){var c=this,i=c.tree,b=[],d=i.getRootNode(),a=[],h;f=f||"text";g=g||new RegExp(e,"ig");if(Ext.isEmpty(e)){c.clearFilter();return}i.expandAll();d.cascadeBy(function(j){if(j.get(f).match(g)){b.push(j)
}});if(c.allowParentFolders===false){Ext.each(b,function(j){if(!j.isLeaf()){Ext.Array.remove(b,j)}})}Ext.each(b,function(l,k,j){d.cascadeBy(function(m){if(m.contains(l)===true){a.push(m)}});if(c.allowParentFolders===true&&!l.isLeaf()){l.cascadeBy(function(m){a.push(m)})}a.push(l)});d.cascadeBy(function(j){h=Ext.fly(i.getView().getNode(j));if(h){h.setVisibilityMode(Ext.Element.DISPLAY);h.setVisible(Ext.Array.contains(a,j))}})},clearFilter:function(){var c=this,a=this.tree,b=a.getRootNode();if(c.collapseOnClear){a.collapseAll()
}b.cascadeBy(function(d){viewNode=Ext.fly(a.getView().getNode(d));if(viewNode){viewNode.show()}})}});Ext.define("OpenEMap.view.layer.Add",{extend:OpenEMap.view.layer.Tree,title:"Lägg till lager",headerPosition:"top",collapsible:true,collapseMode:"header",collapseDirection:"right",titleCollapse:true,viewConfig:{plugins:{ptype:"treeviewdragdrop",enableDrop:false},copy:true},plugins:{ptype:"treefilter",allowParentFolders:true},dockedItems:[{xtype:"toolbar",dock:"top",layout:"fit",items:[{xtype:"trigger",triggerCls:"x-form-clear-trigger",onTriggerClick:function(){this.reset();
this.focus()},listeners:{change:function(c,b){var a=c.up("treepanel");a.filter(b)},buffer:250}}]}],initComponent:function(){var a=this;this.columns=[{xtype:"treecolumn",flex:1,dataIndex:"text"}];this.store=Ext.create("OpenEMap.data.GroupedLayerTree");Ext.Ajax.request({url:OpenEMap.basePathProxy+OpenEMap.wmsURLs.getCapabilities,success:this.parseCapabilities,scope:this,disableCaching:false});this.callParent(arguments)},parseCapabilities:function(c){var e=new OpenLayers.Format.WMSCapabilities();var a=e.read(c.responseText);
var b=this.store.setRootNode({});var f=function(g){var h=g.split(":");return h.length>1?h[1]:g};a.capability.layers.sort(function(h,g){if(f(h.name)<f(g.name)){return -1}if(f(h.name)>f(g.name)){return 1}return 0});var d=a.capability.layers.map(function(h){var g={text:f(h.name),leaf:true,checked_:true,title:h.title,name:h.title,queryable:h.queryable,clickable:h.queryable,isGroupLayer:false,visibility:true,metadataURL:h.metadataURLs.length>0?h.metadataURLs[0]:null,wms:{url:OpenEMap.wmsURLs.url,params:{LAYERS:h.name,FORMAT:"image/png",TRANSPARENT:true},options:{isBaseLayer:false,visibility:true}}};
var i=Ext.create("OpenEMap.config.Parser");g.layer=i.createLayer(g);return g});b.appendChild(d)}});Ext.define("OpenEMap.view.MetadataWindow",{extend:Ext.Window,title:"Metadata",width:600,height:500,border:0,layout:"fit",closeAction:"hide",TRANSLATION:{sv:{tag:{"gmd:citation":"","gmd:CI_Address":"","gmd:CI_Citation":"","gmd:CI_Contact":"","gmd:CI_Date":"","gmd:CI_Telephone":"","gmd:CI_ResponsibleParty":"","gmd:identificationInfo":"","gmd:EX_BoundingPolygon":"","gmd:EX_Extent":"","gmd:EX_GeographicBoundingBox":"","gmd:EX_GeographicDescription":"","gmd:EX_TemporalExtent":"","gmd:EX_VerticalExtent":"","gmd:MD_BrowseGraphic":"","gmd:MD_Constraints":"","gmd:MD_Identifier":"","gmd:MD_Keywords":"","gmd:MD_LegalConstraints":"","gmd:MD_Metadata":"","gmd:MD_MaintenanceInformation":"","gmd:MD_SecurityConstraints":"","gmd:thesaurusName":"","gmd:voice":"","srv:SV_ServiceIdentification":"","gmd:accessConstraints":"Nyttjanderestriktioner","gmd:abstract":"Sammanfattning","gmd:address":"Adress","gmd:alternateTitle":"Alternativ titel","gmd:city":"Stad","gmd:classification":"Klassificering","gmd:contact":"Metadatakontakt","gmd:contactInfo":"Kontaktinformation","gmd:date":"Datum","gmd:dateStamp":"Datum","gmd:dateType":"Datumtyp","gmd:descriptiveKeywords":"Nyckelordslista","gmd:electronicMailAddress":"E-post","gmd:fileIdentifier":"Identifierare för metadatamängden","gmd:graphicOverview":"Exempelbild","gmd:hierarchyLevel":"Hierarkisk nivå (Resurstyp)","gmd:individualName":"Person","gmd:identifier":"Identifierare","gmd:keyword":"Nyckelord","gmd:language":"Språk","gmd:metadataStandardName":"Metadatastandardversion","gmd:metadataStandardVersion":"Metadatastandard","gmd:organisationName":"Organisation","gmd:otherConstraints":"Andra restriktioner","gmd:phone":"Telefonnummer","gmd:pointOfContact":"Kontakt","gmd:resourceConstraints":"Restriktioner och begränsningar","gmd:role":"Ansvarsområde","gmd:status":"Status","gmd:title":"Titel","gmd:type":"Typ","gmd:useLimitation":"Användbarhetsbegränsningar"},codeListValue:{swe:"Svenska",service:"Tjänst",pointOfContact:"Kontakt"}}},initComponent:function(){this.overviewTab=new Ext.Panel({title:"Översikt"});
this.metadataTab=new Ext.Panel({title:"Information om metadata"});this.dataTab=new Ext.Panel({title:"Information om data"});this.qualityTab=new Ext.Panel({title:"Kvalitet"});this.distributionTab=new Ext.Panel({title:"Distribution"});this.restTab=new Ext.Panel({title:"Rest"});this.items=Ext.create("Ext.tab.Panel",{activeTab:0,defaults:{autoScroll:true},items:[this.overviewTab,this.metadataTab,this.dataTab,this.qualityTab,this.distributionTab,this.restTab]});this.callParent(arguments)},showMetadata:function(b){var a=this;
this.dataHandler.getMetadata(b,function(d){if(d.children){var c=a.parseMetadata(d.children);a.overviewTab.html=c.overview;a.metadataTab.html=c.metadata_info;a.dataTab.html=c.data_info;a.qualityTab.html=c.quality;a.distributionTab.html=c.distribution;a.restTab.html=c.rest;a.show()}})},translate:function(b,d){var e="sv";var a=null;try{a=this.TRANSLATION[e][b][d];if(typeof a!=="string"){a=d}}catch(c){translateTag=null}return a},parseMetadataTextTag:function(a){var b=null;if(a.tag){b=this.translate("tag",a.tag);
b=(b!==null)?(b!==""?"<b>"+b+"</b>":""):null}if(a.text){b=a.text}if(a.attributes){if(a.attributes.codeListValue){b=this.translate("codeListValue",a.attributes.codeListValue)}}return b},getGroups:function(e,d){var a=[];for(var c in d){for(var b=0;b<d[c].length;b++){if(e.indexOf(d[c][b])!==-1){a.push(c)}}}if(a.length===0){a.push("rest")}return a},metadataIterator:function(b,l,d,e){var g=this.parseMetadataTextTag(b);var k=(typeof e!=="undefined"?(e+">"):"")+b.tag;var a=this.getGroups(k,d);for(var f=0;
f<a.length;f++){var h=a[f];if(typeof l[h]!=="string"){l[h]=""}if(g!==null){l[h]+="<li>";l[h]+=g;if(b.children&&f===0){l[h]+=g!==""?"<ul>":"";for(var c=0;c<b.children.length;c++){this.metadataIterator(b.children[c],l,d,k)}l[h]+=g!==""?"</ul>":""}l[h]+="</li>"}}},parseMetadata:function(c){var a={};var b={overview:["gmd:MD_Metadata>gmd:identificationInfo>srv:SV_ServiceIdentification>gmd:citation>gmd:CI_Citation>gmd:title","gmd:MD_Metadata>gmd:identificationInfo>srv:SV_ServiceIdentification>gmd:abstract","gmd:MD_Metadata>gmd:identificationInfo>srv:SV_ServiceIdentification>gmd:descriptiveKeywords","gmd:MD_Metadata>gmd:identificationInfo>srv:SV_ServiceIdentification>gmd:graphicOverview"],metadata_info:["gmd:MD_Metadata>gmd:fileIdentifier","gmd:MD_Metadata>gmd:language","gmd:MD_Metadata>gmd:dateStamp","gmd:MD_Metadata>gmd:hierarchyLevel","gmd:MD_Metadata>gmd:metadataStandardName","gmd:MD_Metadata>gmd:metadataStandardVersion","gmd:MD_Metadata>gmd:contact"],data_info:["gmd:MD_Metadata>gmd:identificationInfo"],quality:["gmd:MD_Metadata>gmd:dataQualityInfo"],distribution:["gmd:MD_Metadata>gmd:distributionInfo"]};
this.metadataIterator(c[0],a,b);return a}});Ext.define("OpenEMap.model.MapConfig",{extend:Ext.data.Model,fields:["configId","name","isPublic","username"]});Ext.define("OpenEMap.data.SavedMapConfigs",{extend:Ext.data.Store,model:"OpenEMap.model.MapConfig",storeId:"savedMapConfigs",autoLoad:true,constructor:function(a){this.proxy={type:"rest",appendId:true,url:((OpenEMap&&OpenEMap.wsUrls&&OpenEMap.wsUrls.basePath)?OpenEMap.wsUrls.basePath:"")+((OpenEMap&&OpenEMap.wsUrls&&OpenEMap.wsUrls.adminconfigs)?OpenEMap.wsUrls.adminconfigs:"")+"/configlist",reader:{type:"json",root:"configs"},writer:{type:"json"}};
this.callParent(arguments)}});Ext.define("OpenEMap.view.SavedMapConfigs",{extend:Ext.grid.Panel,autoScroll:true,hideHeaders:true,id:"savedMapConfigsGrid",constructor:function(){this.store=Ext.create("OpenEMap.data.SavedMapConfigs");this.columns=[{header:"Name",dataIndex:"name",flex:1,tooltip:"Ladda",renderer:function(c,b,a){b.tdAttr='data-qtip="Ladda karta"';return c},listeners:{click:function(c,i,b,f,h,a,g){var d=((OpenEMap&&OpenEMap.wsUrls&&OpenEMap.wsUrls.basePath)?OpenEMap.wsUrls.basePath:"")+((OpenEMap&&OpenEMap.wsUrls&&OpenEMap.wsUrls.configs)?OpenEMap.wsUrls.configs:"")+"/config/"+a.get("configId");
Ext.Ajax.request({scope:this,url:d,success:function(e){this.client.destroy();this.client.configure(JSON.parse(e.responseText),this.client.initialOptions);h.stopEvent();return false},failure:function(e){Ext.MessageBox.alert("Kommunikationsproblem","Kartan kan inte öppnas. Kontakta systemadministratör.")}})}.bind(this)}},{xtype:"actioncolumn",width:40,getClass:function(a,b){return b.record.get("isPublic")?"action-none":"action-remove"},tooltip:"Ta bort",handler:function(c,h,b,d,g,a,f){if(a.get("isPublic")){return false
}Ext.MessageBox.confirm("Ta bort","Vill du verkligen ta bort konfigurationen?",function(i){if(i==="yes"){var e=c.getStore();c.panel.dataHandler.deleteConfiguration(a.get("configId"),{configId:a.get("configId")});e.removeAt(h)}});g.stopEvent();return false}}];this.callParent(arguments)}});Ext.define("OpenEMap.view.layer.Advanced",{extend:Ext.container.Container,layout:{type:"vbox",align:"stretch"},initComponent:function(b){var d=this;this.dataHandler=Ext.create("OpenEMap.data.DataHandler");this.metadataWindow=Ext.create("OpenEMap.view.MetadataWindow",{dataHandler:this.dataHandler});
this.savedMapConfigs=Ext.create("OpenEMap.view.SavedMapConfigs",{dataHandler:this.dataHandler,autoScroll:true,client:this.client,title:"Kartor",collapsible:true,flex:1,minHeight:100});var a=Ext.create("Ext.Action",{text:"Byt namn...",disabled:true,handler:function(h,g){var f=this.showOnMapLayerView.getSelectionModel().getSelection()[0];if(f&&f.get("isGroupLayer")){Ext.Msg.prompt("Byt namn...","Ange nytt namn:",function(i,j){if(i=="ok"){f.set("text",j)}},window,false,f.get("text"))}}.bind(this)});
var e=Ext.create("Ext.Action",{text:"Nytt grupplager",disabled:true,handler:function(h,g){var f=this.showOnMapLayerView.getSelectionModel().getSelection()[0];if(f){Ext.Msg.prompt("Nytt grupplager","Ange namn:",function(i,k){if(i=="ok"){var j=Ext.create("OpenEMap.model.GroupedLayerTreeModel",{text:k,checked:true,isGroupLayer:true});f.appendChild(j)}})}}.bind(this)});var c=Ext.create("Ext.menu.Menu",{items:[a,e]});this.showOnMapLayerView=Ext.create("OpenEMap.view.layer.Tree",{title:"Visas på kartan",split:true,border:false,mapPanel:this.mapPanel,client:this.client,rootVisible:false,collapsible:true,autoscroll:true,flex:4,viewConfig:{plugins:{ptype:"treeviewdragdrop",allowContainerDrops:true,allowParentInserts:true},listeners:{itemcontextmenu:function(f,j,h,g,i){i.stopEvent();
c.showAt(i.getXY());return false}}},columns:[{xtype:"gx_treecolumn",flex:1,dataIndex:"text"},{xtype:"actioncolumn",width:40,iconCls:"action-remove",tooltip:"Ta bort",handler:function(h,k,f){var j=h.getStore().getAt(k);for(var g=0;g<j.childNodes.length;g++){j.removeChild(j.childNodes[g])}j.remove()},dataHandler:this.dataHandler}],buttons:[{text:"Spara kartinnehåll",handler:function(){if(d.orginalConfig){var f=Ext.clone(d.orginalConfig);Ext.MessageBox.prompt("Namn","Ange ett namn:",function(g,h){if(g=="ok"&&h.length>0){f=d.getConfig();
f.isPublic=false;if(!(OpenEMap&&OpenEMap.username)){Ext.Error.raise("Username undefined!")}f.username=OpenEMap.username;if(h!==f.name){f.name=h;d.dataHandler.saveNewConfiguration(f,function(i){d.savedMapConfigs.getStore().load();d.savedMapConfigs.client.destroy();d.savedMapConfigs.client.configure(JSON.parse(i.json),d.savedMapConfigs.client.initialOptions)})}else{if(f.configId){d.dataHandler.updateConfiguration(f.configId,f);d.savedMapConfigs.getStore().load()}}}},this,false,f.name)}}}]});this.showOnMapLayerView.getSelectionModel().on({selectionchange:function(g,f){if(f.length===1&&f[0].data.isGroupLayer){a.enable();
e.enable()}else{a.disable();e.disable()}}});this.items=[d.showOnMapLayerView,d.savedMapConfigs];this.callParent(arguments)},getConfig:function(a){return this.showOnMapLayerView.getConfig(a)}});Ext.define("OpenEMap.view.layer.Basic",{extend:OpenEMap.view.layer.Tree,rootVisible:false,width:300,resizable:true,resizeHandles:"s",initComponent:function(){if(!this.renderTo){this.title="Lager";this.bodyPadding=5;this.collapsible=true}this.callParent(arguments)}});Ext.define("OpenEMap.Gui",{activeAction:null,objectConfigWindowTitle:"Object configuration",constructor:function(b){this.config=b.config;
this.gui=b.gui;this.map=b.map;this.orginalConfig=b.orginalConfig;this.serverStore=b.serverStore;this.search=b.config.search;this.client=b.client;if(this.gui===undefined){this.gui={}}if(this.gui.map===undefined){this.gui.map=false}if(this.gui.map==={}){this.gui.map=false}if(this.gui.layerControl===undefined){this.gui.layerControl={}}if(this.gui.addLayerControl===undefined){this.gui.addLayerControl={}}this.mapPanel=Ext.create("OpenEMap.view.Map",{map:this.map,extent:this.config.extent,config:this.config,listeners:{afterrender:function(){if(this.config.attribution){var d=this.mapPanel.getEl();
Ext.DomHelper.append(d,'<span class="unselectable attribution">'+this.config.attribution+"</span>")}},scope:this}});this.createToolbar();this.createZoomToolPanel();this.createObjectConfigPanel();this.createScalebarPanel();this.createShowCoordinatePanel();this.createSearchCoordinatePanel();this.createLayerControl();this.createBaseLayersPanel();var a=[];a.push(this.mapPanel);if(this.zoomTools&&!this.gui.zoomTools.renderTo){a.push(this.zoomTools)}if(this.objectConfig&&!this.gui.objectConfig.renderTo){a.push(this.objectConfig)
}if(this.scalebar&&!this.gui.scalebar.renderTo){a.push(this.scalebar)}if(this.showCoordinate&&!this.gui.showCoordinate.renderTo){a.push(this.showCoordinate)}if(this.searchCoordinate&&!this.gui.searchCoordinate.renderTo){a.push(this.searchCoordinate)}if(this.layerControl&&!this.gui.layerControl.renderTo){a.push(this.layerControl)}if(this.addLayerControl&&!this.gui.addLayerControl.renderTo){a.push(this.addLayerControl)}if(this.baseLayers&&!this.gui.baseLayers.renderTo){a.push(this.baseLayers)}if(this.toolbar&&!this.gui.toolbar.renderTo){a.push(this.toolbar)
}if(this.gui.map){var c=this.gui.map.renderTo?Ext.get(this.gui.map.renderTo):undefined;this.container=Ext.create("Ext.container.Container",Ext.apply({layout:"absolute",border:false,width:c?c.getWidth():undefined,height:c?c.getHeight():undefined,items:a},this.gui.map))}else{this.container=Ext.create("Ext.container.Viewport",{layout:"absolute",items:a})}},destroy:function(){if(this.mapPanel){this.mapPanel.destroy()}if(this.zoomTools){this.zoomTools.destroy()}if(this.mapLayers){this.mapLayers.destroy()
}if(this.searchFastighet){this.searchFastighet.destroy()}if(this.searchCoordinate){this.searchCoordinate.destroy()}if(this.showCoordinate){this.showCoordinate.destroy()}if(this.toolbar){this.toolbar.destroy()}if(this.layerControl){this.layerControl.destroy()}if(this.addLayerControl){this.addLayerControl.destroy()}if(this.baseLayers){this.baseLayers.destroy()}if(this.objectConfig){this.objectConfig.destroy()}if(this.objectConfigWindow){this.objectConfigWindow.destroy()}if(this.scalebar){this.scalebar.destroy()
}if(this.container){this.container.destroy()}},onToggle:function(a,c){var b=a.baseAction;if(!this.objectConfig){return}if(c){this.mapPanel.unselectAll();this.objectConfig.hide();this.activeAction=b}b.toggle(c)},createToolbar:function(){var e=this.config.basePath;var c=this.config.layers;var b=function(i){var f;if((Ext.isObject(i)&&Ext.Object.getSize(i)>0)||(!Ext.isObject(i)&&!Ext.isEmpty(i))){if(i===this.config.tools[this.config.tools.length-1]){f="oep-tools-last"}var g={map:this.map,mapPanel:this.mapPanel,cls:f};
if(i.constructor===Object){Ext.apply(g,i);i=g.type;delete g.type}if(i=="ZoomSelector"){return Ext.create("OpenEMap.form.ZoomSelector",{map:this.map,cls:f})}else{if(i=="DrawObject"){g.objectConfigView=this.objectConfig}else{if(i=="Identify"){g.basePath=e;g.layers=c;g.client=this.client}else{if(i=="Permalink"){g.client=this.client}else{if(i=="Popup"){g.layers=c;if((g.showOnlyFirstHit===undefined)||(g.showOnlyFirstHit===null)){g.showOnlyFirstHit=true}}}}}}var j=Ext.create("OpenEMap.action."+i,g);if(g.activate&&j.control){this.controlToActivate=j.control
}var h=Ext.create("Ext.button.Button",j);h.on("toggle",this.onToggle,this);return h}};if(!this.config.tools){this.config.tools=[]}var d=this.config.tools.map(b,this);var a=0;d.forEach(function(f){if(f){if(!f.hideFromToolbar){if(f.constructor==String){a+=1}else{if(f.width){a+=f.width+1}else{a+=38}}}}});if(this.gui.toolbar&&!this.gui.toolbar.renderTo){this.toolbar=Ext.create("Ext.toolbar.Toolbar",Ext.apply({cls:"oep-tools",y:20,x:20,width:a,items:d},this.gui.toolbar))}else{if(this.gui.toolbar&&this.gui.toolbar.renderTo){this.toolbar=Ext.create("Ext.toolbar.Toolbar",Ext.apply({cls:"oep-tools",width:this.gui.toolbar.width||a,items:d},this.gui.toolbar))
}}},createLayerControl:function(){var a=[];if(!this.gui.layerControl.y){this.gui.layerControl.y=20}if(!this.gui.layerControl.right){this.gui.layerControl.right=20}if(!this.gui.layerControl.style){this.gui.layerControl.style="right: "+this.gui.layerControl.right+"px"}if(!this.gui.layerControl.width){this.gui.layerControl.width=300}if(!this.gui.layerControl.maxHeight){this.gui.layerControl.maxHeight=window.innerHeight-this.gui.layerControl.y-60}if(!this.gui.addLayerControl.y){this.gui.addLayerControl.y=this.gui.layerControl.y
}if(!this.gui.addLayerControl.right){this.gui.addLayerControl.right=this.gui.layerControl.width+this.gui.layerControl.right}if(!this.gui.addLayerControl.style){this.gui.addLayerControl.style="right: "+this.gui.addLayerControl.right+"px"}if(!this.gui.addLayerControl.width){this.gui.addLayerControl.width=300}if(!this.gui.addLayerControl.maxHeight){this.gui.addLayerControl.maxHeight=window.innerHeight-this.gui.addLayerControl.y-56}if(this.gui.layers){if(this.gui.layers&&this.gui.layers.type==="advanced"){this.mapLayers=Ext.create("OpenEMap.view.layer.Advanced",Ext.apply({mapPanel:this.mapPanel,orginalConfig:this.orginalConfig,client:this.client,flex:1},this.gui.layers));
this.addLayerControl=Ext.create("OpenEMap.view.layer.Add",{mapPanel:this.mapPanel,border:false,renderTo:this.gui.addLayerControl.renderTo,y:this.gui.addLayerControl.y,style:this.gui.addLayerControl.style,width:this.gui.addLayerControl.width,maxHeight:this.gui.addLayerControl.maxHeight,collapsible:true,dataHandler:this.dataHandler,metadataColumn:Ext.create("OpenEMap.action.MetadataInfoColumn",{metadataWindow:this.metadataWindow,dataHandler:this.dataHandler})})}else{if(this.gui.layers&&this.gui.layers.type==="listconfigs"){this.mapLayers=Ext.create("OpenEMap.view.layer.Advanced",Ext.apply({mapPanel:this.mapPanel,orginalConfig:this.orginalConfig,client:this.client,flex:1},this.gui.layers))
}else{this.mapLayers=Ext.create("OpenEMap.view.layer.Basic",Ext.apply({mapPanel:this.mapPanel,client:this.client,flex:1},this.gui.layers))}}if(!this.gui.layers.renderTo){a.push(this.mapLayers)}}if(this.gui.searchFastighet&&this.search){this.searchFastighet=Ext.create("OpenEMap.view.SearchFastighet",Ext.apply({mapPanel:this.mapPanel,basePath:this.config.basePath,search:this.search,collapsible:true,height:120,width:this.gui.layerControl.width},this.gui.searchFastighet));if(!this.gui.searchFastighet.renderTo){a.push(this.searchFastighet)
}}if(a.length>0){this.layerControl=Ext.create("Ext.panel.Panel",{renderTo:this.gui.layerControl.renderTo,y:this.gui.layerControl.y,style:this.gui.layerControl.style,layout:{type:"vbox",align:"stretch"},width:this.gui.layerControl.width,maxHeight:this.gui.layerControl.maxHeight,border:false,bodyStyle:{background:"transparent"},items:a})}},createBaseLayersPanel:function(){if(!this.map.allOverlays&&this.gui.baseLayers){var a=this.map.layers;var c=Ext.create("OpenEMap.config.Parser");var b=c.extractBaseLayers(a);
if(b){if(!(this.gui.baseLayers.renderTo||this.gui.baseLayers.style)){this.gui.baseLayers.style={right:"20px",bottom:"20px"}}this.baseLayers=Ext.create("OpenEMap.view.BaseLayers",Ext.apply({mapPanel:this.mapPanel,renderTo:this.gui.baseLayers.renderTo},this.gui.baseLayers))}}},createZoomToolPanel:function(){if(this.gui.zoomTools){if(!(this.gui.zoomTools.renderTo||this.gui.zoomTools.style)){this.gui.zoomTools.style={left:"20px",top:"76px"}}this.zoomTools=Ext.create("OpenEMap.view.ZoomTools",Ext.apply({mapPanel:this.mapPanel,renderTo:this.gui.zoomTools.renderTo,width:36},this.gui.zoomTools))
}},createSearchCoordinatePanel:function(){if(this.gui.searchCoordinate&&this.gui.searchCoordinate.renderTo){this.searchCoordinate=Ext.create("OpenEMap.view.SearchCoordinate",Ext.apply({mapPanel:this.mapPanel},this.gui.searchCoordinate))}},createObjectConfigPanel:function(){if(this.gui.objectConfig){this.objectConfig=Ext.create("OpenEMap.view.ObjectConfig",Ext.apply({mapPanel:this.mapPanel,gui:this},this.gui.objectConfig));this.objectConfigWindow=Ext.create("Ext.window.Window",Ext.apply({title:this.objectConfigWindowTitle,width:480,height:300,layout:"fit",closable:false,collapsible:true,items:this.objectConfig},this.gui.objectConfig));
this.objectConfigWindow.show()}},createShowCoordinatePanel:function(){if(this.gui.showCoordinate&&this.gui.showCoordinate.renderTo){if(!this.cls){this.cls="oep-show-coordinate"}var a={mapPanel:this.mapPanel,cls:this.cls,setCoord:function(d){var c=this.getLonLatFromPixel(d.xy);var b=OpenEMap.mapClient.gui.showCoordinate.getComponent("e");var f=OpenEMap.mapClient.gui.showCoordinate.getComponent("n");b.setValue(Math.round(c.lon));f.setValue(Math.round(c.lat))}};this.showCoordinate=Ext.create("OpenEMap.view.ShowCoordinate",Ext.apply(a,this.gui.showCoordinate));
this.map.events.register("mousemove",this.map,this.showCoordinate.setCoord)}},createScalebarPanel:function(){if(this.gui.scalebar){this.scalebar=Ext.create("OpenEMap.view.Scalebar",Ext.apply({mapPanel:this.mapPanel},this.gui.scalebar))}}});Ext.define("OpenEMap.model.Server",{extend:Ext.data.Model,fields:["id","type","url","proxy"]});Ext.define("OpenEMap.data.Servers",{extend:Ext.data.Store,model:"OpenEMap.model.Server",storeId:"servers",singelton:true,constructor:function(a){a=Ext.apply(this,a);this.callParent([a])
}});Ext.define("OpenEMap.config.Parser",{constructor:function(a){Ext.apply(this,a);this.callParent(arguments)},parse:function(c){var b={fallThrough:true,controls:["Navigation","KeyboardDefaults"],projection:"EPSG:3006",resolutions:[280,140,70,28,14,7,4.2,2.8,1.4,0.56,0.28,0.14,0.112],extent:[608114,6910996,641846,6932596],maxExtent:[487000,6887000,749144,7149144],units:"m",municipalities:["Sundvsall","Timrå","Kramfors","Örnsköldsvik","Härnösand"]};b.resolutions=c.resolutions||b.resolutions;b.units=c.units||b.units;
b.projection=c.projection||b.projection;b.maxExtent=c.maxExtent;b.extent=c.extent;b.municipalities=c.municipalities||b.municipalities;b.controls=b.controls.map(this.createControl);Ext.apply(b,c.map);e=c.layers.map(this.transformLayer);var a=this.parseLayerTree(e);var e=this.extractLayers(a);e=this.sortBaseLayers(e);b.allOverlays=!e.some(this.isBaseLayer,this);b.layers=e.map(function(f){return f.layer});b.layers=b.layers.filter(function(f){return f});var d=new OpenLayers.Map(b);d.layerTree=a;d.layerSwitcherLayerTree=this.getLayerSwitcherLayers(a);
return d},sortBaseLayers:function(d){var f=d.filter(function(g){return(g.layer&&g.layer.isBaseLayer)});var c=d.filter(function(g){return !(g.layer&&g.layer.isBaseLayer)});var b=false;var e=[];for(var a=0;f.length>a;a++){if(f[a].visibility){e.unshift(f[a])}else{e.push(f[a])}}return e.concat(c)},parseLayerTree:function(a){a.forEach(this.iterateLayers,this);return a},getLayerSwitcherLayers:function(a){return a.filter(function(b){return(b.layers||(this.isWMSLayer(b)&&!this.isBaseLayer(b)))?true:false
},this)},extractLayers:function(d){var b=d.filter(function(e){return !e.layers});var a=d.filter(function(e){return e.layers}).map(function(e){return e.layers});var c=[].concat.apply([],a);d=b.concat(c);d.reverse();return d},extractPlainLayers:function(d){var a=[];for(var c=0,b=d.length;c<b;c++){a.push(d[c]);if(d[c].layers){a=a.concat(this.extractPlainLayers(d[c].layers))}}return a},extractWFS:function(a){a=a.filter(function(b){return(b.wfs&&b.wfs.url)});return a},extractNoWFS:function(a){a=a.filter(function(b){return !(b.wfs&&b.wfs.url)
});return a},extractWMS:function(a){a=a.filter(function(b){return(b.wms&&b.wms.url)});return a},extractClickableLayers:function(a){a=a.filter(function(b){return(b.clickable&&b.queryable)});return a},extractVisibleLayers:function(a){a=a.filter(function(b){return(b.layer&&b.layer.visibility)});return a},extractVector:function(a){a=this.extractLayers(a);a=a.filter(function(b){return b.vector});return a},extractBaseLayers:function(a){a=this.extractLayers(a);a=a.filter(function(b){return b.isBaseLayer
});return a},extractPopupLayers:function(a){a=this.extractLayers(a);a=a.filter(function(b){if(b.idAttribute&&b.popupTextAttribute){return true}else{return false}});a=a.filter(function(b){return b.visibility});return a},getOptions:function(a){if(a.wms){return a.wms.options}else{if(a.osm){return a.osm.options}else{if(a.google){return a.google.options}else{if(a.bing){return a.bing.options}}}}},isOpenLayersLayer:function(a){if(a.wms||a.osm||a.google||a.bing){return true}else{return false}},isBaseLayer:function(b){var a=this.getOptions(b);
if(a&&a.isBaseLayer){return true}else{return false}},createControl:function(a){if(a.constructor==String){return new OpenLayers.Control[a]()}else{return new OpenLayers.Control[a.type](a.options)}},isWMSLayer:function(a){return a.wms?true:false},transformLayer:function(a){if(a.url){a.wms={url:a.url,params:a.params,options:a.options}}return a},createLayer:function(a){if(a.wms){return new OpenLayers.Layer.WMS(a.name,a.wms.url,a.wms.params,a.wms.options)}else{if(a.osm){return new OpenLayers.Layer.OSM(a.name,a.osm.url,a.osm.options)
}else{if(a.google){return new OpenLayers.Layer.Google(a.name,a.google.options)}else{if(a.bing){return new OpenLayers.Layer.Bing(Ext.apply({name:a.name},a.bing.options))}else{throw new Error("Unknown layer type")}}}}},isLayerChecked:function(a){if(a.isGroupLayer&&a.layers&&a.layers.length){return a.layers.some(this.isLayerChecked,this)}else{return a.wms&&a.wms.options&&a.wms.options.visibility?a.wms.options.visibility:false}},iterateLayers:function(b){b.text=b.name;b.checked=this.isLayerChecked(b);
if(typeof b.serverId!=="undefined"&&b.serverId!==""){var c=this.serverStore.getById(b.serverId);if(c){if(b.wms&&!b.wms.url){var a="/wms";if(b.wms.gwc){a="/gwc/service/wms"}b.wms.url=c.get("url")+a}if(b.wfs&&!b.wfs.url){b.wfs.url=c.get("url")}}}if(this.isOpenLayersLayer(b)){b.layer=this.createLayer(b);b.layer.queryable=b.queryable?b.queryable:false}if(b.layers&&(Object.prototype.toString.call(b.layers)==="[object Array]")&&b.layers.length>0){b.isGroupLayer=true;b.expanded=b.expanded===undefined?true:b.expanded;
b.layers.forEach(arguments.callee,this)}else{b.leaf=true}}});Ext.define("OpenEMap.form.ZoomSelector",{extend:Ext.form.ComboBox,emptyText:"Zoom Level",listConfig:{getInnerTpl:function(){return"1: {scale:round(0)}"}},width:120,editable:false,triggerAction:"all",queryMode:"local",initComponent:function(){this.store=Ext.create("GeoExt.data.ScaleStore",{map:this.map});this.listeners={select:{fn:function(c,a,b){this.map.zoomTo(a[0].get("level"))},scope:this}};this.map.events.register("zoomend",this,function(){var a=this.store.queryBy(function(b){return this.map.getZoom()==b.data.level
});if(a.length>0){a=a.items[0];this.setValue("1 : "+parseInt(a.data.scale))}else{if(!zoomSelector.rendered){return}this.clearValue()}});this.callParent(arguments)}});Ext.define("OpenEMap.OpenLayers.Control.ModifyFeature",{});OpenLayers.Control.ModifyFeature=OpenLayers.Class(OpenLayers.Control,{bySegment:false,documentDrag:false,geometryTypes:null,clickout:true,toggle:true,standalone:false,layer:null,feature:null,vertex:null,vertices:null,virtualVertices:null,handlers:null,deleteCodes:null,virtualStyle:null,dragHandleStyle:null,radiusHandleStyle:null,vertexRenderIntent:null,mode:null,createVertices:true,modified:false,radiusHandle:null,dragHandle:null,onModificationStart:function(){},onModification:function(){},onModificationEnd:function(){},initialize:function(d,c){c=c||{};
this.layer=d;this.vertices=[];this.virtualVertices=[];this.virtualStyle=OpenLayers.Util.extend({},this.layer.style||this.layer.styleMap.createSymbolizer(null,c.vertexRenderIntent));this.virtualStyle.fillOpacity=0.3;this.virtualStyle.strokeOpacity=0.3;this.deleteCodes=[46,68];this.mode=OpenLayers.Control.ModifyFeature.RESHAPE;OpenLayers.Control.prototype.initialize.apply(this,[c]);if(!(OpenLayers.Util.isArray(this.deleteCodes))){this.deleteCodes=[this.deleteCodes]}var e={down:function(g){this.vertex=null;
var h=this.layer.getFeatureFromEvent(this.handlers.drag.evt);if(h){this.dragStart(h)}else{if(this.clickout){this._unselect=this.feature}}},move:function(g){delete this._unselect;if(this.vertex){this.dragVertex(this.vertex,g)}},up:function(){this.handlers.drag.stopDown=false;if(this._unselect){this.unselectFeature(this._unselect);delete this._unselect}},done:function(g){if(this.vertex){this.dragComplete(this.vertex)}}};var a=this;var b={documentDrag:this.documentDrag,setEvent:function(g){var h=a.feature;
a._lastVertex=h?h.layer.getFeatureFromEvent(g):null;OpenLayers.Handler.Drag.prototype.setEvent.apply(this,arguments)},stopDown:false};var f={keydown:this.handleKeypress};this.handlers={keyboard:new OpenLayers.Handler.Keyboard(this,f),drag:new OpenLayers.Handler.Drag(this,e,b)};if(this.bySegment){if(!window.rbush){throw new Error("The rbush library is required")}if(!OpenLayers.Control.ModifyFeature.BySegment){throw new Error("OpenLayers.Control.ModifyFeature.BySegment is missing from the build")}else{OpenLayers.Util.extend(this,OpenLayers.Control.ModifyFeature.BySegment)
}}},createVirtualVertex:function(d,c){var b=(d.x+c.x)/2;var e=(d.y+c.y)/2;var a=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(b,e),null,this.virtualStyle);a._sketch=true;return a},destroy:function(){if(this.map){this.map.events.un({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this})}this.layer=null;OpenLayers.Control.prototype.destroy.apply(this,[])},activate:function(){if(OpenLayers.Control.prototype.activate.apply(this,arguments)){this.moveLayerToTop();this.map.events.on({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this});
this._lastVertex=null;return this.handlers.keyboard.activate()&&this.handlers.drag.activate()}return false},deactivate:function(){var b=false;if(OpenLayers.Control.prototype.deactivate.apply(this,arguments)){this.moveLayerBack();this.map.events.un({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this});this.layer.removeFeatures(this.vertices,{silent:true});this.layer.removeFeatures(this.virtualVertices,{silent:true});this.vertices=[];this.handlers.drag.deactivate();this.handlers.keyboard.deactivate();
var a=this.feature;if(a&&a.geometry&&a.layer){this.unselectFeature(a)}b=true}return b},beforeSelectFeature:function(a){return this.layer.events.triggerEvent("beforefeaturemodified",{feature:a})},selectFeature:function(b){if(this.feature===b||(this.geometryTypes&&OpenLayers.Util.indexOf(this.geometryTypes,b.geometry.CLASS_NAME)==-1)){return}if(this.beforeSelectFeature(b)!==false){if(this.feature){this.unselectFeature(this.feature)}this.feature=b;this.layer.selectedFeatures.push(b);this.layer.drawFeature(b,"select");
this.modified=false;this.resetVertices();this.onModificationStart(this.feature)}var a=b.modified;if(b.geometry&&!(a&&a.geometry)){this._originalGeometry=b.geometry.clone()}},unselectFeature:function(a){this.layer.removeFeatures(this.vertices,{silent:true});this.vertices=[];this.layer.destroyFeatures(this.virtualVertices,{silent:true});this.virtualVertices=[];if(this.dragHandle){this.layer.destroyFeatures([this.dragHandle],{silent:true});delete this.dragHandle}if(this.radiusHandle){this.layer.destroyFeatures([this.radiusHandle],{silent:true});
delete this.radiusHandle}this.layer.drawFeature(this.feature,"default");this.feature=null;OpenLayers.Util.removeItem(this.layer.selectedFeatures,a);this.onModificationEnd(a);this.layer.events.triggerEvent("afterfeaturemodified",{feature:a,modified:this.modified});this.modified=false},dragStart:function(b){var a=b.geometry.CLASS_NAME=="OpenLayers.Geometry.Point";if(!this.standalone&&((!b._sketch&&a)||!b._sketch)){if(this.toggle&&this.feature===b){this._unselect=b}this.selectFeature(b)}if(this.feature&&(b._sketch||a&&b===this.feature)){this.vertex=b;
this.handlers.drag.stopDown=true}},dragVertex:function(c,a){var d=this.map.getLonLatFromViewPortPx(a);var b=c.geometry;b.move(d.lon-b.x,d.lat-b.y);this.modified=true;if(this.feature.geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){this.layer.events.triggerEvent("vertexmodified",{vertex:c.geometry,feature:this.feature,pixel:a})}else{if(c._index){if(c._index==-1){c._index=OpenLayers.Util.indexOf(c.geometry.parent.components,c._next)}c.geometry.parent.addComponent(c.geometry,c._index);delete c._index;
OpenLayers.Util.removeItem(this.virtualVertices,c);this.vertices.push(c)}else{if(c==this.dragHandle){this.layer.removeFeatures(this.vertices,{silent:true});this.vertices=[];if(this.radiusHandle){this.layer.destroyFeatures([this.radiusHandle],{silent:true});this.radiusHandle=null}}else{if(c!==this.radiusHandle){this.layer.events.triggerEvent("vertexmodified",{vertex:c.geometry,feature:this.feature,pixel:a})}}}if(this.virtualVertices.length>0){this.layer.destroyFeatures(this.virtualVertices,{silent:true});
this.virtualVertices=[]}this.layer.drawFeature(this.feature,this.standalone?undefined:"select")}this.layer.drawFeature(c)},dragComplete:function(a){this.resetVertices();this.setFeatureState();this.onModification(this.feature);this.layer.events.triggerEvent("featuremodified",{feature:this.feature})},setFeatureState:function(){if(this.feature.state!=OpenLayers.State.INSERT&&this.feature.state!=OpenLayers.State.DELETE){this.feature.state=OpenLayers.State.UPDATE;if(this.modified&&this._originalGeometry){var a=this.feature;
a.modified=OpenLayers.Util.extend(a.modified,{geometry:this._originalGeometry});delete this._originalGeometry}}},resetVertices:function(){if(this.vertices.length>0){this.layer.removeFeatures(this.vertices,{silent:true});this.vertices=[]}if(this.virtualVertices.length>0){this.layer.removeFeatures(this.virtualVertices,{silent:true});this.virtualVertices=[]}if(this.dragHandle){this.layer.destroyFeatures([this.dragHandle],{silent:true});this.dragHandle=null}if(this.radiusHandle){this.layer.destroyFeatures([this.radiusHandle],{silent:true});
this.radiusHandle=null}if(this.feature&&this.feature.geometry.CLASS_NAME!="OpenLayers.Geometry.Point"){if((this.mode&OpenLayers.Control.ModifyFeature.DRAG)){this.collectDragHandle()}if((this.mode&(OpenLayers.Control.ModifyFeature.ROTATE|OpenLayers.Control.ModifyFeature.RESIZE))){this.collectRadiusHandle()}if(this.mode&OpenLayers.Control.ModifyFeature.RESHAPE){if(!(this.mode&OpenLayers.Control.ModifyFeature.RESIZE)){this.collectVertices()}}}},handleKeypress:function(a){var b=a.keyCode;if(this.feature&&OpenLayers.Util.indexOf(this.deleteCodes,b)!=-1){var c=this._lastVertex;
if(c&&OpenLayers.Util.indexOf(this.vertices,c)!=-1&&!this.handlers.drag.dragging&&c.geometry.parent){c.geometry.parent.removeComponent(c.geometry);this.layer.events.triggerEvent("vertexremoved",{vertex:c.geometry,feature:this.feature,pixel:a.xy});this.layer.drawFeature(this.feature,this.standalone?undefined:"select");this.modified=true;this.resetVertices();this.setFeatureState();this.onModification(this.feature);this.layer.events.triggerEvent("featuremodified",{feature:this.feature})}}},collectVertices:function(){this.vertices=[];
this.virtualVertices=[];var a=this;function b(g){var d,e,h,f;if(g.CLASS_NAME=="OpenLayers.Geometry.Point"){e=new OpenLayers.Feature.Vector(g);e._sketch=true;e.renderIntent=a.vertexRenderIntent;a.vertices.push(e)}else{var c=g.components.length;if(g.CLASS_NAME=="OpenLayers.Geometry.LinearRing"){c-=1}for(d=0;d<c;++d){h=g.components[d];if(h.CLASS_NAME=="OpenLayers.Geometry.Point"){e=new OpenLayers.Feature.Vector(h);e._sketch=true;e.renderIntent=a.vertexRenderIntent;a.vertices.push(e)}else{b(h)}}if(a.createVertices&&g.CLASS_NAME!="OpenLayers.Geometry.MultiPoint"){for(d=0,f=g.components.length;
d<f-1;++d){var k=g.components[d];var l=g.components[d+1];if(k.CLASS_NAME=="OpenLayers.Geometry.Point"&&l.CLASS_NAME=="OpenLayers.Geometry.Point"){var j=a.createVirtualVertex.call(a,k,l);j.geometry.parent=g;j._index=d+1;a.virtualVertices.push(j)}}}}}b.call(this,this.feature.geometry);this.layer.addFeatures(this.virtualVertices,{silent:true});this.layer.addFeatures(this.vertices,{silent:true})},collectDragHandle:function(){var d=this.feature.geometry;var a=d.getBounds().getCenterLonLat();var c=new OpenLayers.Geometry.Point(a.lon,a.lat);
var b=new OpenLayers.Feature.Vector(c,null,this.dragHandleStyle);c.move=function(e,f){OpenLayers.Geometry.Point.prototype.move.call(this,e,f);d.move(e,f)};b._sketch=true;this.dragHandle=b;this.dragHandle.renderIntent=this.vertexRenderIntent;this.layer.addFeatures([this.dragHandle],{silent:true})},collectRadiusHandle:function(){var h=this.feature.geometry;var a=h.getBounds();var b=a.getCenterLonLat();var i=new OpenLayers.Geometry.Point(b.lon,b.lat);var g=new OpenLayers.Geometry.Point(a.right,a.bottom);
var f=new OpenLayers.Feature.Vector(g,null,this.radiusHandleStyle);var c=(this.mode&OpenLayers.Control.ModifyFeature.RESIZE);var e=(this.mode&OpenLayers.Control.ModifyFeature.RESHAPE);var d=(this.mode&OpenLayers.Control.ModifyFeature.ROTATE);g.move=function(t,s){OpenLayers.Geometry.Point.prototype.move.call(this,t,s);var u=this.x-i.x;var p=this.y-i.y;var v=u-t;var q=p-s;if(d){var k=Math.atan2(q,v);var j=Math.atan2(p,u);var n=j-k;n*=180/Math.PI;h.rotate(n,i)}if(c){var m,r;if(e){m=p/q;r=(u/v)/m}else{var o=Math.sqrt((v*v)+(q*q));
var l=Math.sqrt((u*u)+(p*p));m=l/o}h.resize(m,i,r)}};f._sketch=true;this.radiusHandle=f;this.radiusHandle.renderIntent=this.vertexRenderIntent;this.layer.addFeatures([this.radiusHandle],{silent:true})},setMap:function(a){this.handlers.drag.setMap(a);OpenLayers.Control.prototype.setMap.apply(this,arguments)},handleMapEvents:function(a){if(a.type=="removelayer"||a.property=="order"){this.moveLayerToTop()}},moveLayerToTop:function(){var a=Math.max(this.map.Z_INDEX_BASE.Feature-1,this.layer.getZIndex())+1;
this.layer.setZIndex(a)},moveLayerBack:function(){var a=this.layer.getZIndex()-1;if(a>=this.map.Z_INDEX_BASE.Feature){this.layer.setZIndex(a)}else{this.map.setLayerZIndex(this.layer,this.map.getLayerIndex(this.layer))}},CLASS_NAME:"OpenLayers.Control.ModifyFeature"});OpenLayers.Control.ModifyFeature.RESHAPE=1;OpenLayers.Control.ModifyFeature.RESIZE=2;OpenLayers.Control.ModifyFeature.ROTATE=4;OpenLayers.Control.ModifyFeature.DRAG=8;Ext.define("OpenEMap.OpenLayers.Control.DynamicMeasure",{});OpenLayers.Control.DynamicMeasure=OpenLayers.Class(OpenLayers.Control.Measure,{accuracy:2,persist:false,styles:null,positions:null,maxSegments:1,maxHeadings:1,layerSegmentsOptions:undefined,layerHeadingOptions:null,layerLengthOptions:undefined,layerAreaOptions:undefined,drawingLayer:null,multi:false,layerSegments:null,layerLength:null,layerArea:null,dynamicObj:null,isArea:null,initialize:function(k,l){l=l||{};
l.handlerOptions=OpenLayers.Util.extend({persist:!l.drawingLayer},l.handlerOptions);if(l.drawingLayer&&!("multi" in l.handlerOptions)){l.handlerOptions.multi=l.multi}if(l.drawingLayer){var d=l.drawingLayer.styleMap&&l.drawingLayer.styleMap.styles.temporary;if(d){l.handlerOptions.layerOptions=OpenLayers.Util.applyDefaults(l.handlerOptions.layerOptions,{styleMap:new OpenLayers.StyleMap({"default":d})})}}var i=l.styles||{};l.styles=i;var c=OpenLayers.Control.DynamicMeasure.styles;if(!l.handlerOptions.layerOptions||!l.handlerOptions.layerOptions.styleMap){var f=OpenLayers.Util.applyDefaults(i.Point,c.Point);
var g=OpenLayers.Util.applyDefaults(i.Line,c.Line);var e=OpenLayers.Util.applyDefaults(i.Polygon,c.Polygon);var b=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:{Point:f,Line:g,Polygon:e}})]});l.handlerOptions=l.handlerOptions||{};l.handlerOptions.layerOptions=l.handlerOptions.layerOptions||{};l.handlerOptions.layerOptions.styleMap=new OpenLayers.StyleMap({"default":b})}l.positions=OpenLayers.Util.applyDefaults(l.positions,OpenLayers.Control.DynamicMeasure.positions);l.callbacks=l.callbacks||{};
if(l.drawingLayer){OpenLayers.Util.applyDefaults(l.callbacks,{create:function(n,m){this.callbackCreate(n,m);this.drawingLayer.events.triggerEvent("sketchstarted",{vertex:n,feature:m})},modify:function(n,m){this.callbackModify(n,m);this.drawingLayer.events.triggerEvent("sketchmodified",{vertex:n,feature:m})},done:function(m){this.callbackDone(m);this.drawFeature(m)}})}OpenLayers.Util.applyDefaults(l.callbacks,{create:this.callbackCreate,point:this.callbackPoint,cancel:this.callbackCancel,done:this.callbackDone,modify:this.callbackModify,redo:this.callbackRedo,undo:this.callbackUndo});
var h=this;var j=document.onselectstart?document.onselectstart:OpenLayers.Function.True;var a=OpenLayers.Class(k,{down:function(m){document.onselectstart=OpenLayers.Function.False;return k.prototype.down.apply(this,arguments)},up:function(m){document.onselectstart=j;return k.prototype.up.apply(this,arguments)},move:function(m){if(!this.mouseDown){document.onselectstart=j}return k.prototype.move.apply(this,arguments)},mouseout:function(m){if(OpenLayers.Util.mouseLeft(m,this.map.viewPortDiv)){if(this.mouseDown){document.onselectstart=j
}}return k.prototype.mouseout.apply(this,arguments)},finalize:function(){document.onselectstart=j;k.prototype.finalize.apply(this,arguments)}},{undo:function(){var m=k.prototype.undo.call(this);if(m){this.callback("undo",[this.point.geometry,this.getSketch(),true])}return m},redo:function(){var m=k.prototype.redo.call(this);if(m){this.callback("redo",[this.point.geometry,this.getSketch(),true])}return m}});OpenLayers.Control.Measure.prototype.initialize.call(this,a,l);this.isArea=k.prototype.polygon!==undefined
},destroy:function(){this.deactivate();OpenLayers.Control.Measure.prototype.destroy.apply(this,arguments)},draw:function(){},activate:function(){var c=OpenLayers.Control.Measure.prototype.activate.apply(this,arguments);if(c){this.dynamicObj={};var b=this.styles||{},d=OpenLayers.Control.DynamicMeasure.styles,a=this;var e=function(i,h){if(h===null){return null}var f=OpenLayers.Util.extend({displayInLayerSwitcher:false,calculateInRange:OpenLayers.Function.True},h);if(!f.styleMap){var j=b[i];f.styleMap=new OpenLayers.StyleMap({"default":OpenLayers.Util.applyDefaults(j,d[i])})
}var g=new OpenLayers.Layer.Vector(a.CLASS_NAME+" "+i,f);a.map.addLayer(g);a.map.setLayerIndex(g,99);return g};this.layerSegments=e("labelSegments",this.layerSegmentsOptions);this.layerHeading=e("labelHeading",this.layerHeadingOptions);this.layerLength=e("labelLength",this.layerLengthOptions);if(this.isArea){this.layerArea=e("labelArea",this.layerAreaOptions)}}return c},deactivate:function(){var a=OpenLayers.Control.Measure.prototype.deactivate.apply(this,arguments);if(a){this.layerSegments&&this.layerSegments.destroy();
this.layerLength&&this.layerLength.destroy();this.layerHeading&&this.layerHeading.destroy();this.layerArea&&this.layerArea.destroy();this.dynamicObj=null;this.layerSegments=null;this.layerLength=null;this.layerHeading=null;this.layerArea=null}return a},setImmediate:function(a){this.immediate=a},callbackCreate:function(){var a=this.dynamicObj;a.drawing=false;a.freehand=false;a.fromIndex=0;a.countSegments=0},callbackCancel:function(){this.destroyLabels()},callbackDone:function(b){var a=new OpenLayers.Feature.Vector(b);
this.mapPanel.measureLayer.addFeatures([a.clone()]);var c=function(d){return d.clone()};if(this.layerArea){this.mapPanel.measureLayerArea.addFeatures(this.layerArea.features.map(c))}this.mapPanel.measureLayerLength.addFeatures(this.layerLength.features.map(c));this.mapPanel.measureLayerSegments.addFeatures(this.layerSegments.features.map(c));this.measureComplete(b);if(!this.persist){this.destroyLabels()}},drawFeature:function(c){var a=new OpenLayers.Feature.Vector(c);var b=this.drawingLayer.events.triggerEvent("sketchcomplete",{feature:a});
if(b!==false){a.state=OpenLayers.State.INSERT;this.featureAdded&&this.featureAdded(a);this.events.triggerEvent("featureadded",{feature:a})}},destroyLabels:function(){this.layerSegments&&this.layerSegments.destroyFeatures(null,{silent:true});this.layerLength&&this.layerLength.destroyFeatures(null,{silent:true});this.layerHeading&&this.layerHeading.destroyFeatures(null,{silent:true});this.layerArea&&this.layerArea.destroyFeatures(null,{silent:true})},callbackPoint:function(a,b){var c=this.dynamicObj;
if(!c.drawing){this.destroyLabels()}if(!this.handler.freehandMode(this.handler.evt)){c.fromIndex=this.handler.getCurrentPointIndex()-1;c.freehand=false;c.countSegments++}else{if(!c.freehand){c.fromIndex=this.handler.getCurrentPointIndex()-1;c.freehand=true;c.countSegments++}}this.measurePartial(a,b);c.drawing=true},callbackUndo:function(b,c){var a=this,d=function(g){if(g){var h=g.features,i=h.length-1,f=h[i],k=f.attributes.from,e=a.handler.getCurrentPointIndex();if(k>=e){var j=a.dynamicObj;g.destroyFeatures(f);
f=h[i-1];j.fromIndex=f.attributes.from;j.countSegments=h.length}}};d(this.layerSegments);d(this.layerHeading);this.callbackModify(b,c,true)},callbackRedo:function(a,c){var b=this.handler.line.geometry,d=this.handler.getCurrentPointIndex();var e=this.dynamicObj;this.showLabelSegment(e.countSegments,e.fromIndex,b.components.slice(e.fromIndex,d));e.fromIndex=this.handler.getCurrentPointIndex()-1;e.countSegments++;this.callbackModify(a,c,true)},callbackModify:function(f,h,e){if(this.immediate){this.measureImmediate(f,h,e)
}var c=this.dynamicObj;if(c.drawing===false){return}var i=this.handler.line.geometry,a=this.handler.getCurrentPointIndex();if(!this.handler.freehandMode(this.handler.evt)&&c.freehand){c.fromIndex=a-1;c.freehand=false;c.countSegments++}var g=this.getBestLength(i);if(!g[0]){return}var d=this.positions,b={center:function(){var j=h.geometry.getBounds().clone();j.extend(f);j=j.getCenterLonLat();return[j.lon,j.lat]},initial:function(){var j=i.components[0];return[j.x,j.y]},start:function(){var j=i.components[c.fromIndex];
return[j.x,j.y]},middle:function(){var j=i.components[c.fromIndex];return[(j.x+f.x)/2,(j.y+f.y)/2]},end:function(){return[f.x,f.y]}};if(this.layerLength){this.showLabel(this.layerLength,1,0,g,b[d.labelLength](),1)}if(this.isArea){if(this.layerArea){this.showLabel(this.layerArea,1,0,this.getBestArea(h.geometry),b[d.labelArea](),1)}if(this.showLabelSegment(1,0,[i.components[0],i.components[a]])){c.countSegments++}}this.showLabelSegment(c.countSegments,c.fromIndex,i.components.slice(c.fromIndex,a+1))
},showLabelSegment:function(h,l,e){var b=this.layerSegments,j=this.layerHeading;if(!b&&!j){return false}var o=[],k=e.length;for(var g=0;g<k;g++){o.push(e[g].clone())}var n=o[0],m=o[k-1],d=this.getBestLength(new OpenLayers.Geometry.LineString(o)),f=this.positions,a={start:function(){return[n.x,n.y]},middle:function(){return[(n.x+m.x)/2,(n.y+m.y)/2]},end:function(){return[m.x,m.y]}},c=false;if(b){c=this.showLabel(b,h,l,d,a[f.labelSegments](),this.maxSegments)}if(j&&d[0]>0){var q=Math.atan2(m.y-n.y,m.x-n.x),p=90-q*180/Math.PI;
if(p<0){p+=360}c=c||this.showLabel(j,h,l,[p,"°"],a[f.labelHeading](),this.maxHeadings)}return c},showLabel:function(f,g,i,a,l,d){var c,k,b=f.features;if(b.length<g){if(a[0]===0){return false}c=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(l[0],l[1]),{from:i});this.setMesureAttributes(c.attributes,a);f.addFeatures([c]);if(d!==null){var e=(b.length-d)-1;if(e>=0){k=b[e];k.style={display:"none"};f.drawFeature(k)}}return true}else{c=b[g-1];var h=c.geometry;h.x=l[0];h.y=l[1];h.clearBounds();
this.setMesureAttributes(c.attributes,a);f.drawFeature(c);if(d!==null){var j=(b.length-d);if(j>=0){k=b[j];if(k.style){delete k.style;f.drawFeature(k)}}}return false}},setMesureAttributes:function(a,b){a.measure=OpenLayers.Number.format(b[0].toFixed(this.accuracy),null);a.units=b[1]},CLASS_NAME:"OpenLayers.Control.DynamicMeasure"});OpenLayers.Control.DynamicMeasure.styles={Point:{pointRadius:0,graphicName:"square",fillColor:"white",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#333333"},Line:{strokeWidth:2,strokeOpacity:1,strokeColor:"#666666",strokeDashstyle:"dash"},Polygon:{strokeWidth:2,strokeOpacity:1,strokeColor:"#666666",strokeDashstyle:"solid",fillColor:"white",fillOpacity:0.3},labelSegments:{pointRadius:0,label:"${measure} ${units}",fontSize:"12px",fontColor:"#800517",fontFamily:"Verdana",labelOutlineColor:"#eeeeee",labelAlign:"cm",labelOutlineWidth:2},labelLength:{pointRadius:0,label:"${measure} ${units}\n",fontSize:"12px",fontWeight:"bold",fontColor:"#800517",fontFamily:"Verdana",labelOutlineColor:"#eeeeee",labelAlign:"lb",labelOutlineWidth:3},labelArea:{pointRadius:0,label:"${measure}\n${units}²\n",fontSize:"11px",fontWeight:"bold",fontColor:"#800517",fontFamily:"Verdana",labelOutlineColor:"#dddddd",labelAlign:"cm",labelOutlineWidth:3},labelHeading:{pointRadius:0,label:"${measure} ${units}",fontSize:"11px",fontColor:"#800517",fontFamily:"Verdana",labelOutlineColor:"#dddddd",labelAlign:"cm",labelOutlineWidth:3}};
OpenLayers.Control.DynamicMeasure.positions={labelSegments:"middle",labelLength:"end",labelArea:"center",labelHeading:"start"};Ext.define("OpenEMap.Client",{version:"1.6.1",map:null,drawLayer:undefined,configure:function(b,a){a=Ext.apply({},a);this.initialConfig=Ext.clone(b);this.initialOptions=Ext.clone(a);Ext.tip.QuickTipManager.init();var c=Ext.create("OpenEMap.config.Parser");this.map=c.parse(b);this.gui=Ext.create("OpenEMap.Gui",{config:b,gui:a.gui,map:this.map,client:this,orginalConfig:this.initialConfig});
this.mapPanel=this.gui.mapPanel;this.drawLayer=this.gui.mapPanel.drawLayer;if(this.gui.controlToActivate){this.gui.controlToActivate.activate()}if(a.callback){a.callback.call(this)}},getPermalinkdata:function(){var b=this.drawLayer.features;var c=new OpenLayers.Format.GeoJSON();var a=c.write(b);return{version:this.version,config:this.getConfig(),options:this.initialOptions,extent:this.map.getExtent().toArray(),drawLayer:{geojson:a}}},getConfig:function(a){return this.gui.mapLayers.getConfig(a)},encode:function(a){return JSON.stringify(this.mapPanel.encode(a))
},addGeoJSON:function(a){var c=new OpenLayers.Format.GeoJSON();var b=c.read(a,"Feature");if(b.attributes.config){var d=Ext.create("OpenEMap.ObjectFactory");b=d.create(b.attributes.config,b.attributes)}this.drawLayer.addFeatures([b])},setSketchStyleMap:function(a){this.map.controls.forEach(function(b){if(b instanceof OpenLayers.Control.DrawFeature){b.handler.layerOptions.styleMap=a;if(b.handler.layer){b.handler.layer.styleMap=a}}})},toggleEdgeLabels:function(b,e){var c=b||{};function d(f){return !isNaN(f)&&parseInt(Number(f))==f&&!isNaN(parseInt(f,10))
}if(!d(e)){e=2}var a=function(){var h=function(k){var l=k.geometry;if(l.CLASS_NAME!="OpenLayers.Geometry.Polygon"){return[]}var i=l.components[0];var j=i.components.slice(0,i.components.length-1).map(function(m,p){var t=i.components[p].clone();var n=i.components[p+1].clone();var s=new OpenLayers.Geometry.LineString([t,n]);var r=s.getCentroid({weighted:true});var q=Ext.applyIf(Ext.clone(c),{label:s.getLength().toFixed(e).toString()+" m",strokeColor:"#000000",strokeWidth:0,labelAlign:"cm",pointRadius:0});
var o=new OpenLayers.Feature.Vector(r,null,q);return o});return j};if(this.labelLayer){this.labelLayer.destroyFeatures()}var f=this.drawLayer.features.map(h);if(f.length>0){var g=f.reduce(function(j,i){return j.concat(i)});this.labelLayer.addFeatures(g)}};if(this.labelLayer===undefined){this.labelLayer=new OpenLayers.Layer.Vector();this.map.addLayer(this.labelLayer);this.drawLayer.events.on({featuremodified:a,vertexmodified:a,featuresadded:a,featuresremoved:a,scope:this})}else{}a.apply(this)},addPopupLayer:function(c,f,n,i,g,k,h,m,j,q){if(!c){Ext.Error.raise("GeoJSON-string is null.")
}if(!f){f="VectorLayer"}if(!n){n="id"}if(!i){i="popupText"}if(!g){g=""}if(!k){k=""}if(!h){h=null}if(!j){j="EPSG:3006"}if(!Proj4js.defs[j]){Ext.Error.raise("Unknown coordinate system: "+j+"\nAdd coordinate system using proj4.defs('Name', 'Definition')")}if(q===null){q=true}var o=new OpenLayers.Format.GeoJSON();var p=j;var b=this.map.projection;o.internalProjection=new OpenLayers.Projection(b);o.externalProjection=new OpenLayers.Projection(p);var e=o.read(c,"FeatureCollection");if(!e){Ext.Error.raise("Can not read features from GeoJSON due to malformed syntax.")
}var l=OpenLayers.Util.getParameters(window.location.href).renderer;l=(l)?[l]:OpenLayers.Layer.Vector.prototype.renderers;var d=new OpenLayers.Layer.Vector(f,{renderers:l,idAttribute:n,popupTextAttribute:i,popupTextPrefix:g,popupTextSuffix:k,popupTitleAttribute:h});if(!d){Ext.Error.raise("Can not create popup layer: "+f)}if(m){d.styleMap=m}this.map.addLayer(d);d.addFeatures(e);var a=new OpenLayers.Bounds();e.forEach(function(r){r.renderIntent="default";a.extend(r.geometry.getBounds());d.drawFeature(r)
});d.popup=[];if(q){d.map.zoomToExtent(a)}return d},removePopupLayer:function(a){if(a.popup){a.popup.forEach(function(b){b.destroy();b=null});a.popup=[]}mapClient.map.removeLayer(a)},showPopupFeaturePopup:function(e,d){if(e.popup){e.popup.forEach(function(f){f.destroy()})}var c=e.popupTextPrefix+d.attributes[e.popupTextAttribute]+e.popupTextSuffix;var b="";if(e.popupTitleAttribute){b=d.attributes[e.popupTitleAttribute]}var a=new OpenEMap.view.PopupResults({mapPanel:this.gui.mapPanel,location:d,popupText:c,feature:d,title:b});
a.show();e.popup.push(a)},showPopupFeature:function(d,e,a){if(!d){Ext.Error.raise("Popup layer undefined.")}if(!e){Ext.Error.raise("Feature id undefined.")}var b=d.getFeaturesByAttribute(d.idAttribute,e);if(b){if(b.length==1){var g=Ext.create("OpenEMap.config.Parser");var c=g.extractPopupLayers(d.map.layers);c.forEach(function(h){h.features.forEach(function(i){if(i.renderIntent=="select"){i.renderIntent="default";i.layer.drawFeature(i);i.layer.map.events.triggerEvent("popupfeatureunselected",{layer:h,featureid:i.attributes[h.idAttribute]})
}});h.popup.forEach(function(i){i.destroy()})});this.showPopupFeaturePopup(d,b[0]);b[0].renderIntent="select";if(a){var f=b[0].geometry.getCentroid();b[0].layer.map.setCenter([f.x,f.y])}b[0].layer.drawFeature(b[0]);b[0].layer.map.events.triggerEvent("popupfeatureselected",{layer:d,featureid:b[0].attributes[d.idAttribute]})}else{Ext.Error.raise("More then one feature with specified id: "+e)}}else{Ext.Error.raise("No feature with specified id: "+e)}},destroyPopupLayers:function(){var b=Ext.create("OpenEMap.config.Parser");
var a=b.extractPopupLayers(this.map.layers);if(a){a.forEach(function(c){this.removePopupLayer(c)})}},destroy:function(){if(this.map){if(this.map.controls){this.map.controls.forEach(function(a){a.destroy()});this.map.controls=null}if(this.map.layers){this.destroyPopupLayers()}}if(this.gui){this.gui.destroy()}}});Ext.ns("OpenEMap");Ext.apply(OpenEMap,{lmUser:"sundsvall",basePathMapFish:"/print/pdf",basePathLM:"/search/lm/",basePathES:"/search/es/",basePathImages:"resources/images/",basePathWMS:"/geoserver/wms",wmsURLs:{basePath:"/geoserver/wms",url:"https://extmaptest.sundsvall.se/geoserver/wms",getCapabilities:"https://extmaptest.sundsvall.se/getcapabilities/wms.xml"},basePathProxy:"/cgi-bin/proxy.py?url=",wsUrls:{basePath:"/openemapadmin",permalinks:"/openemappermalink/permalinks",configs:"/configs",adminconfigs:"/adminconfigs",servers:"settings/servers",layers:"layers/layers",metadata:"geometadata/getmetadatabyid",metadata_abstract:"geometadata/getabstractbyid"},username:null});
Ext.apply(OpenEMap,{requestLM:function(a){a.url=OpenEMap.basePathLM+a.url+"&lmuser="+OpenEMap.lmUser;Ext.Ajax.request(a)}});OpenLayers.Layer.Vector.prototype.renderers=["Canvas","SVG","VML"];OpenLayers.DOTS_PER_INCH=90.71446714322;Ext.define("OpenEMap.locale.sv_SE.Gui",{override:"OpenEMap.Gui",objectConfigWindowTitle:"Objektkonfiguration"});Ext.define("OpenEMap.locale.sv_SE.view.ObjectConfig",{override:"OpenEMap.view.ObjectConfig",typeLabel:"Typ",widthLabel:"Bredd",lengthLabel:"Längd",m1Label:"M1",m2Label:"M2",angleLabel:"Vinkel"});
Ext.define("OpenEMap.Search",{constructor:function(a){initConfig()},doSearch:function(){}});