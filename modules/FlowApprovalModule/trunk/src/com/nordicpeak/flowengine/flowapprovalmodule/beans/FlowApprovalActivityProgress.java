package com.nordicpeak.flowengine.flowapprovalmodule.beans;

import java.lang.reflect.Field;
import java.sql.Timestamp;

import se.unlogic.hierarchy.core.beans.User;
import se.unlogic.standardutils.dao.annotations.DAOManaged;
import se.unlogic.standardutils.dao.annotations.Key;
import se.unlogic.standardutils.dao.annotations.ManyToOne;
import se.unlogic.standardutils.dao.annotations.Table;
import se.unlogic.standardutils.reflection.ReflectionUtils;
import se.unlogic.standardutils.xml.GeneratedElementable;
import se.unlogic.standardutils.xml.XMLElement;

@Table(name = "flowapproval_activity_progress")
@XMLElement(name = "ActivityProgress")
public class FlowApprovalActivityProgress extends GeneratedElementable {

	public static final Field ACTIVITY_RELATION = ReflectionUtils.getField(FlowApprovalActivityProgress.class, "activity");

	@Key
	@DAOManaged(autoGenerated = true)
	@XMLElement
	private Integer activityProgressID;

	@DAOManaged(columnName = "activityID")
	@ManyToOne
	@XMLElement
	private FlowApprovalActivity activity;

	@DAOManaged
	@XMLElement
	private Integer flowInstanceID;

	@DAOManaged
	@XMLElement
	private Timestamp added;

	@DAOManaged
	@XMLElement
	private Timestamp completed;

	@DAOManaged
	@XMLElement
	private boolean denied;

	@DAOManaged(columnName = "completingUserID")
	@XMLElement(name = "CompletingUser")
	private User completingUser;

	@DAOManaged
	@XMLElement
	private String comment;

	public Integer getActivityProgressID() {
		return activityProgressID;
	}

	public void setActivityProgressID(Integer activityProgressID) {
		this.activityProgressID = activityProgressID;
	}

	public FlowApprovalActivity getActivity() {
		return activity;
	}

	public void setActivity(FlowApprovalActivity activity) {
		this.activity = activity;
	}

	public Integer getFlowInstanceID() {
		return flowInstanceID;
	}

	public void setFlowInstanceID(Integer flowInstanceID) {
		this.flowInstanceID = flowInstanceID;
	}

	public Timestamp getAdded() {
		return added;
	}

	public void setAdded(Timestamp added) {
		this.added = added;
	}

	public Timestamp getCompleted() {
		return completed;
	}

	public void setCompleted(Timestamp completed) {
		this.completed = completed;
	}

	public boolean isDenied() {
		return denied;
	}

	public void setDenied(boolean denied) {
		this.denied = denied;
	}

	public User getCompletingUser() {
		return completingUser;
	}

	public void setCompletingUser(User completer) {
		this.completingUser = completer;
	}

	public String getComment() {
		return comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@Override
	public String toString() {
		return getClass().getSimpleName() + " (activityProgressID=" + activityProgressID + ", activity=" + (activity == null ? null : activity.getActivityID()) + ", flowInstanceID=" + flowInstanceID + ", added=" + added + ", completed=" + completed + ", denied=" + denied + ", completingUser=" + completingUser + ")";
	}

}
